{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amounts",
          "type": "uint256"
        }
      ],
      "name": "ConvexEarnsProfits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheats",
      "outputs": [
        {
          "internalType": "contract Cheats",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "depositCVX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "receiveCVXFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMultiUserWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenizer",
      "outputs": [
        {
          "internalType": "contract cvxTokenizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff19166001179055600280546001600160a01b0319908116734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b1790915560038054821673d533a949740bb3306d119cc777fa900ba034cd5217905560058054821673cf50b810e57ac33b91dcf525c6ddd9881b13933217905560068054909116738014595f2ab54cd7c604b00e9fb932176fdc86ae1790553480156100a157600080fd5b50613ffd806100b16000396000f3fe60806040523480156200001157600080fd5b5060043610620000b85760003560e01c8063aa4eb636116200007b578063aa4eb6361462000116578063ba414fa61462000120578063de689fdf1462000139578063f0d26e1c1462000150578063f4537502146200015a578063fa7626d4146200017157620000b8565b80630a9254e414620000bd578063389094f214620000c95780635fbf798314620000d3578063700180c614620000ea5780637f924c4e146200010c575b600080fd5b620000c76200017b565b005b620000c7620003b8565b620000c7620000e436600462001482565b620006b5565b620000f46200082c565b60405162000103919062001560565b60405180910390f35b620000c76200083b565b620000c762000986565b6200012a62000e17565b604051620001039190620015ae565b620000c76200014a366004620014b4565b62000f4a565b620000f462001151565b620000c76200016b366004620014b4565b62001166565b6200012a6200126a565b600180546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d179081905560405163c88a5e6d60e01b81526001600160a01b03919091169063c88a5e6d90620001de903090683635c9adc5dea000009060040162001574565b600060405180830381600087803b158015620001f957600080fd5b505af11580156200020e573d6000803e3d6000fd5b5050600880546001600160a01b031990811673601d14b29cb847206568d0ae322f23b32403247f179182905560078054909116735ae34f68cbecca41dfdebed59156b9f90eb7514d17905560015460405163c88a5e6d60e01b81526001600160a01b03918216945063c88a5e6d93506200029a9290911690683635c9adc5dea000009060040162001574565b600060405180830381600087803b158015620002b557600080fd5b505af1158015620002ca573d6000803e3d6000fd5b505060015460075460405163c88a5e6d60e01b81526001600160a01b03928316945063c88a5e6d9350620003109290911690683635c9adc5dea000009060040162001574565b600060405180830381600087803b1580156200032b57600080fd5b505af115801562000340573d6000803e3d6000fd5b5050505060405162000352906200144b565b604051809103906000f0801580156200036f573d6000803e3d6000fd5b506000805462010000600160b01b031916620100006001600160a01b039384168102919091179182905560048054919092049092166001600160a01b0319909216919091179055565b620003cc670de0b6b3a76400003062000f4a565b620003e169021e19e0c9bab2400000620006b5565b6001546001600160a01b031663e5d6bf026200040142620f424062001692565b6040518263ffffffff1660e01b81526004016200041f9190620015b9565b600060405180830381600087803b1580156200043a57600080fd5b505af11580156200044f573d6000803e3d6000fd5b50506000805460405163266d6a8360e11b81529193506201000090046001600160a01b03169150634cdad506906200049490670de0b6b3a764000090600401620015b9565b60206040518083038186803b158015620004ad57600080fd5b505afa158015620004c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e891906200149b565b6002546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906200052090309060040162001560565b60206040518083038186803b1580156200053957600080fd5b505afa1580156200054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200057491906200149b565b600054604051635d043b2960e11b81529192506201000090046001600160a01b03169063ba08765290620005b990670de0b6b3a76400009030908190600401620015c2565b602060405180830381600087803b158015620005d457600080fd5b505af1158015620005e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200060f91906200149b565b506002546040516370a0823160e01b81526000916001600160a01b0316906370a08231906200064390309060040162001560565b60206040518083038186803b1580156200065c57600080fd5b505afa15801562000671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200069791906200149b565b9050620006b0620006a98383620016ad565b8462001273565b505050565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d5690620006fb9073d533a949740bb3306d119cc777fa900ba034cd529060040162001560565b600060405180830381600087803b1580156200071657600080fd5b505af11580156200072b573d6000803e3d6000fd5b505060035460055460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb9350620007689290911690859060040162001574565b602060405180830381600087803b1580156200078357600080fd5b505af115801562000798573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007be919062001459565b50600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200081057600080fd5b505af115801562000825573d6000803e3d6000fd5b5050505050565b6001546001600160a01b031681565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a08231916200086f9130910162001560565b60206040518083038186803b1580156200088857600080fd5b505afa1580156200089d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c391906200149b565b9050620008d9670de0b6b3a76400003062000f4a565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a08231916200090d9130910162001560565b60206040518083038186803b1580156200092657600080fd5b505afa1580156200093b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096191906200149b565b9050620009826200097b83670de0b6b3a764000062001692565b8262001273565b5050565b600854620009a790670de0b6b3a7640000906001600160a01b031662000f4a565b620009bc69021e19e0c9bab2400000620006b5565b6001546001600160a01b031663e5d6bf02620009dc42620f424062001692565b6040518263ffffffff1660e01b8152600401620009fa9190620015b9565b600060405180830381600087803b15801562000a1557600080fd5b505af115801562000a2a573d6000803e3d6000fd5b505060075462000a4f9250670de0b6b3a764000091506001600160a01b031662000f4a565b62000a6469021e19e0c9bab2400000620006b5565b6001546001600160a01b031663e5d6bf0262000a8442620f424062001692565b6040518263ffffffff1660e01b815260040162000aa29190620015b9565b600060405180830381600087803b15801562000abd57600080fd5b505af115801562000ad2573d6000803e3d6000fd5b50506001546008546040516303223eab60e11b81526001600160a01b0392831694506306447d56935062000b0d929091169060040162001560565b600060405180830381600087803b15801562000b2857600080fd5b505af115801562000b3d573d6000803e3d6000fd5b50506000805460405163266d6a8360e11b81529193506201000090046001600160a01b03169150634cdad5069062000b8290670de0b6b3a764000090600401620015b9565b60206040518083038186803b15801562000b9b57600080fd5b505afa15801562000bb0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd691906200149b565b6002546008546040516370a0823160e01b81529293506000926001600160a01b03928316926370a082319262000c129291169060040162001560565b60206040518083038186803b15801562000c2b57600080fd5b505afa15801562000c40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c6691906200149b565b600054600854604051635d043b2960e11b81529293506001600160a01b036201000090920482169263ba0876529262000cb192670de0b6b3a7640000929116908190600401620015c2565b602060405180830381600087803b15801562000ccc57600080fd5b505af115801562000ce1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d0791906200149b565b506002546008546040516370a0823160e01b81526000926001600160a01b03908116926370a082319262000d42929091169060040162001560565b60206040518083038186803b15801562000d5b57600080fd5b505afa15801562000d70573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d9691906200149b565b905062000da8620006a98383620016ad565b600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000df957600080fd5b505af115801562000e0e573d6000803e3d6000fd5b50505050505050565b60008054610100900460ff161562000e3b5750600054610100900460ff1662000f47565b600062000e476200132e565b1562000f4457604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062000ea69083906519985a5b195960d21b9060200162001574565b60408051601f198184030181529082905262000ec692916020016200152c565b60408051601f198184030181529082905262000ee29162001552565b6000604051808303816000865af19150503d806000811462000f21576040519150601f19603f3d011682016040523d82523d6000602084013e62000f26565b606091505b509150508080602001905181019062000f40919062001459565b9150505b90505b90565b62000f56828262001166565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d569062000f8890849060040162001560565b600060405180830381600087803b15801562000fa357600080fd5b505af115801562000fb8573d6000803e3d6000fd5b505060025460005460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062000ffc926201000090920490911690869060040162001574565b602060405180830381600087803b1580156200101757600080fd5b505af11580156200102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001052919062001459565b50600054604051636e553f6560e01b8152620100009091046001600160a01b031690636e553f65906200108c90859085906004016200167b565b602060405180830381600087803b158015620010a757600080fd5b505af1158015620010bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010e291906200149b565b50600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200113457600080fd5b505af115801562001149573d6000803e3d6000fd5b505050505050565b6000546201000090046001600160a01b031681565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d5690620011ac907328c6c06298d514db089934071355e5743bf21d609060040162001560565b600060405180830381600087803b158015620011c757600080fd5b505af1158015620011dc573d6000803e3d6000fd5b505060025460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb915062001214908490869060040162001574565b602060405180830381600087803b1580156200122f57600080fd5b505af115801562001244573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010e2919062001459565b60005460ff1681565b80821462000982577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620012aa90620015e1565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620012e3919062001623565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200131c91906200164f565b60405180910390a16200098262001349565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b151590565b620013536200132e565b156200143a57604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620013b59083906519985a5b195960d21b906001906020016200158d565b60408051601f1981840301815290829052620013d592916020016200152c565b60408051601f1981840301815290829052620013f19162001552565b6000604051808303816000865af19150503d806000811462001430576040519150601f19603f3d011682016040523d82523d6000602084013e62001435565b606091505b505050505b6000805461ff001916610100179055565b6128ea80620016de83390190565b6000602082840312156200146b578081fd5b815180151581146200147b578182fd5b9392505050565b60006020828403121562001494578081fd5b5035919050565b600060208284031215620014ad578081fd5b5051919050565b60008060408385031215620014c7578081fd5b8235915060208301356001600160a01b0381168114620014e5578182fd5b809150509250929050565b60008151815b81811015620015125760208185018101518683015201620014f6565b81811115620015215782828601525b509290920192915050565b6001600160e01b03198316815260006200154a6004830184620014f0565b949350505050565b60006200147b8284620014f0565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b60208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b6040808252600a90820152690808115e1c1958dd195960b21b6060820152602081019190915260800190565b6040808252600a9082015269080808081058dd1d585b60b21b6060820152602081019190915260800190565b9182526001600160a01b0316602082015260400190565b60008219821115620016a857620016a8620016c7565b500190565b600082821015620016c257620016c2620016c7565b500390565b634e487b7160e01b600052601160045260246000fdfe610100604052600780546001600160a01b031990811673cf50b810e57ac33b91dcf525c6ddd9881b1393321790915560088054821673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f1790556009805482167362b9c7356a2dc64a1969e19c23e4f579f9810aa7179055600a80548216734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b179055600b8054821673d533a949740bb3306d119cc777fa900ba034cd52179055600c805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2179055348015620000d257600080fd5b50600a60009054906101000a90046001600160a01b03166040518060400160405280600a8152602001690a6e8c2d6cac84086acb60b31b815250604051806040016040528060048152602001630e686acb60e31b8152508181846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200016557600080fd5b505afa1580156200017a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a09190620003bf565b8251620001b590600090602086019062000319565b508151620001cb90600190602085019062000319565b507fff0000000000000000000000000000000000000000000000000000000000000060f882901b166080524660a0526200020462000236565b60c052505050505060601b6001600160601b03191660e052620002306200022a620002c3565b620002c7565b62000503565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200026a9190620003e9565b604051908190038120620002a892917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc690469030906020016200048e565b60405160208183030381529060405280519060200120905090565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200032790620004c6565b90600052602060002090601f0160209004810192826200034b576000855562000396565b82601f106200036657805160ff191683800117855562000396565b8280016001018555821562000396579182015b828111156200039657825182559160200191906001019062000379565b50620003a4929150620003a8565b5090565b5b80821115620003a45760008155600101620003a9565b600060208284031215620003d1578081fd5b815160ff81168114620003e2578182fd5b9392505050565b81546000908190600281046001808316806200040657607f831692505b60208084108214156200042757634e487b7160e01b87526022600452602487fd5b8180156200043e5760018114620004505762000480565b60ff1986168952848901965062000480565b6200045b8a620004ba565b885b86811015620004785781548b8201529085019083016200045d565b505084890196505b509498975050505050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60009081526020902090565b600281046001821680620004db57607f821691505b60208210811415620004fd57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160f81c60a05160c05160e05160601c61238b6200055f60003960008181610aae01528181610b1901528181610c3a01528181610e460152610f7d01526000610a8701526000610a5301526000610a2d015261238b6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ecebe001161010f578063c63d75b6116100a2578063d905777e11610071578063d905777e146103df578063dd62ed3e146103f2578063ef8b30f714610405578063f2fde38b14610418576101f0565b8063c63d75b6146102d0578063c6e6f592146103a6578063ce96cb77146103b9578063d505accf146103cc576101f0565b8063a9059cbb116100de578063a9059cbb1461035a578063b3d7f6b91461036d578063b460af9414610380578063ba08765214610393576101f0565b80637ecebe00146103245780638da5cb5b1461033757806394bf804d1461033f57806395d89b4114610352576101f0565b8063313ce567116101875780634cdad506116101565780634cdad506146102e35780636e553f65146102f657806370a0823114610309578063715018a61461031c576101f0565b8063313ce5671461029e5780633644e515146102b357806338d52e0f146102bb578063402d267d146102d0576101f0565b80630a28a477116101c35780630a28a4771461025b578063127565e41461026e57806318160ddd1461028357806323b872dd1461028b576101f0565b806301e1d114146101f557806306fdde031461021357806307a2d13a14610228578063095ea7b31461023b575b600080fd5b6101fd61042b565b60405161020a9190611f76565b60405180910390f35b61021b610730565b60405161020a9190611ffd565b6101fd610236366004611db8565b6107be565b61024e610249366004611cb0565b6107ed565b60405161020a9190611f6b565b6101fd610269366004611db8565b610858565b61028161027c366004611cb0565b610878565b005b6101fd610945565b61024e610299366004611c04565b61094b565b6102a6610a2b565b60405161020a9190612246565b6101fd610a4f565b6102c3610aac565b60405161020a9190611f3e565b6101fd6102de366004611bb8565b610ad0565b6101fd6102f1366004611db8565b610ad7565b6101fd610304366004611de8565b610ae2565b6101fd610317366004611bb8565b610ba2565b610281610bb4565b6101fd610332366004611bb8565b610bff565b6102c3610c11565b6101fd61034d366004611de8565b610c20565b61021b610cc3565b61024e610368366004611cb0565b610cd0565b6101fd61037b366004611db8565b610d34565b6101fd61038e366004611e0a565b610d53565b6101fd6103a1366004611e0a565b610e6d565b6101fd6103b4366004611db8565b610fa4565b6101fd6103c7366004611bb8565b610fc4565b6102816103da366004611c3f565b610fe6565b6101fd6103ed366004611bb8565b6111b0565b6101fd610400366004611bd2565b6111cb565b6101fd610413366004611db8565b6111e8565b610281610426366004611bb8565b6111f3565b600080610436611264565b9050600081156106115760408051600480825260a0820190925260009160208201608080368337505060095482519293506001600160a01b03169183915060009061049157634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600b548251911690829060019081106104d057634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600c5482519116908290600290811061050f57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600a5482519116908290600390811061054e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b815291169063d06ca61f9061058d90869085906004016121cb565b60006040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e19190810190611cd9565b60038151811061060157634e487b7160e01b600052603260045260246000fd5b6020026020010151915050610615565b5060005b600a546040516370a0823160e01b815282916001600160a01b0316906370a0823190610645903090600401611f3e565b60206040518083038186803b15801561065d57600080fd5b505afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106959190611dd0565b6007546040516370a0823160e01b81526001600160a01b03909116906370a08231906106c5903090600401611f3e565b60206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611dd0565b61071f9190612260565b6107299190612260565b9250505090565b6000805461073d906122ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610769906122ce565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b505050505081565b60025460009080156107e2576107dd6107d561042b565b8490836114aa565b6107e4565b825b9150505b919050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610846908690611f76565b60405180910390a35060015b92915050565b60025460009080156107e2576107dd8161087061042b565b8591906114c9565b6108806114f7565b6001600160a01b0316610891610c11565b6001600160a01b0316146108c05760405162461bcd60e51b81526004016108b790612112565b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906108ee9033908590600401611f52565b602060405180830381600087803b15801561090857600080fd5b505af115801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611d98565b505050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146109a75761098283826122b7565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906109cf9084906122b7565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061233683398151915290610a16908790611f76565b60405180910390a360019150505b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000004614610a8557610a806114fb565b610aa7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5060001990565b6000610852826107be565b6000610aed836111e8565b905080610b0c5760405162461bcd60e51b81526004016108b790612050565b610b416001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086611584565b610b4b82826115e7565b816001600160a01b0316336001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78584604051610b90929190612238565b60405180910390a36108528382611645565b60036020526000908152604090205481565b610bbc6114f7565b6001600160a01b0316610bcd610c11565b6001600160a01b031614610bf35760405162461bcd60e51b81526004016108b790612112565b610bfd6000611734565b565b60056020526000908152604090205481565b6006546001600160a01b031690565b6000610c2b83610d34565b9050610c626001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611584565b610c6c82846115e7565b816001600160a01b0316336001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610cb1929190612238565b60405180910390a36108528184611645565b6001805461073d906122ce565b33600090815260036020526040812080548391908390610cf19084906122b7565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061233683398151915290610846908690611f76565b60025460009080156107e2576107dd610d4b61042b565b8490836114c9565b6000610d5e84610858565b9050336001600160a01b03831614610dce576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610dcc57610da782826122b7565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610dd88482611786565b610de28282611ae3565b816001600160a01b0316836001600160a01b0316336001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610e31929190612238565b60405180910390a4610a246001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611b45565b6000336001600160a01b03831614610edd576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610edb57610eb685826122b7565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610ee684610ad7565b905080610f055760405162461bcd60e51b81526004016108b79061216f565b610f0f8185611786565b610f198285611ae3565b816001600160a01b0316836001600160a01b0316336001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610f68929190612238565b60405180910390a4610a246001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611b45565b60025460009080156107e2576107dd81610fbc61042b565b8591906114aa565b6001600160a01b038116600090815260036020526040812054610852906107be565b428410156110065760405162461bcd60e51b81526004016108b790612194565b60006001611012610a4f565b6001600160a01b038a16600090815260056020908152604091829020805460018101909155915161106f927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928e928e928e9290918e9101611f7f565b60405160208183030381529060405280519060200120604051602001611096929190611f23565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516110cc9493929190611fdf565b6020604051602081039080840390855afa1580156110ee573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906111245750876001600160a01b0316816001600160a01b0316145b6111405760405162461bcd60e51b81526004016108b790612147565b6001600160a01b0390811660009081526004602090815260408083208a8516808552925291829020889055905190918916907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061119f908990611f76565b60405180910390a350505050505050565b6001600160a01b031660009081526003602052604090205490565b600460209081526000928352604080842090915290825290205481565b600061085282610fa4565b6111fb6114f7565b6001600160a01b031661120c610c11565b6001600160a01b0316146112325760405162461bcd60e51b81526004016108b790612112565b6001600160a01b0381166112585760405162461bcd60e51b81526004016108b790612075565b61126181611734565b50565b600754604051638b87634760e01b815260009182916001600160a01b0390911690638b87634790611299903090600401611f3e565b60206040518083038186803b1580156112b157600080fd5b505afa1580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611dd0565b600760009054906101000a90046001600160a01b03166001600160a01b031663cd3daf9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561133757600080fd5b505afa15801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190611dd0565b61137991906122b7565b6007546040516370a0823160e01b8152919250600091670de0b6b3a76400009184916001600160a01b03909116906370a08231906113bb903090600401611f3e565b60206040518083038186803b1580156113d357600080fd5b505afa1580156113e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140b9190611dd0565b6114159190612298565b61141f9190612278565b600754604051630700037d60e01b81529192506001600160a01b031690630700037d90611450903090600401611f3e565b60206040518083038186803b15801561146857600080fd5b505afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190611dd0565b6107299082612260565b8282028115158415858304851417166114c257600080fd5b0492915050565b8282028115158415858304851417166114e157600080fd5b6001826001830304018115150290509392505050565b3390565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161152d9190611e88565b60405190819003812061156992917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69046903090602001611fb3565b60405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115e05760405162461bcd60e51b81526004016108b7906120bb565b5050505050565b80600260008282546115f99190612260565b90915550506001600160a01b0382166000818152600360205260408082208054850190555160008051602061233683398151915290611639908590611f76565b60405180910390a35050565b600a5460075460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261167b929116908690600401611f52565b602060405180830381600087803b15801561169557600080fd5b505af11580156116a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cd9190611d98565b5060075460405163534a7e1d60e11b81526001600160a01b039091169063a694fc3a906116fe908590600401611f76565b600060405180830381600087803b15801561171857600080fd5b505af115801561172c573d6000803e3d6000fd5b505050505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600754604051631c683a1b60e11b81526001600160a01b03909116906338d07436906117b99084906001906004016121ec565b600060405180830381600087803b1580156117d357600080fd5b505af11580156117e7573d6000803e3d6000fd5b50506009546040516370a0823160e01b8152600093506001600160a01b0390911691506370a082319061181e903090600401611f3e565b60206040518083038186803b15801561183657600080fd5b505afa15801561184a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186e9190611dd0565b90508061187b5750611adf565b60095460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926118b1929116908590600401611f52565b602060405180830381600087803b1580156118cb57600080fd5b505af11580156118df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119039190611d98565b5060408051600480825260a0820190925260009160208201608080368337505060095482519293506001600160a01b03169183915060009061195557634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600b5482519116908290600190811061199457634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600c548251911690829060029081106119d357634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600a54825191169082906003908110611a1257634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600854600091166338ed173984838530611a43426001612260565b6040518663ffffffff1660e01b8152600401611a639594939291906121fc565b600060405180830381600087803b158015611a7d57600080fd5b505af1158015611a91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ab99190810190611cd9565b600381518110611ad957634e487b7160e01b600052603260045260246000fd5b50505050505b5050565b6001600160a01b03821660009081526003602052604081208054839290611b0b9084906122b7565b90915550506002805482900390556040516000906001600160a01b0384169060008051602061233683398151915290611639908590611f76565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611b9b5760405162461bcd60e51b81526004016108b7906120e9565b50505050565b80356001600160a01b03811681146107e857600080fd5b600060208284031215611bc9578081fd5b610a2482611ba1565b60008060408385031215611be4578081fd5b611bed83611ba1565b9150611bfb60208401611ba1565b90509250929050565b600080600060608486031215611c18578081fd5b611c2184611ba1565b9250611c2f60208501611ba1565b9150604084013590509250925092565b600080600080600080600060e0888a031215611c59578283fd5b611c6288611ba1565b9650611c7060208901611ba1565b95506040880135945060608801359350608088013560ff81168114611c93578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611cc2578182fd5b611ccb83611ba1565b946020939093013593505050565b60006020808385031215611ceb578182fd5b825167ffffffffffffffff80821115611d02578384fd5b818501915085601f830112611d15578384fd5b815181811115611d2757611d2761231f565b838102604051601f19603f83011681018181108582111715611d4b57611d4b61231f565b604052828152858101935084860182860187018a1015611d69578788fd5b8795505b83861015611d8b578051855260019590950194938601938601611d6d565b5098975050505050505050565b600060208284031215611da9578081fd5b81518015158114610a24578182fd5b600060208284031215611dc9578081fd5b5035919050565b600060208284031215611de1578081fd5b5051919050565b60008060408385031215611dfa578182fd5b82359150611bfb60208401611ba1565b600080600060608486031215611e1e578283fd5b83359250611e2e60208501611ba1565b9150611e3c60408501611ba1565b90509250925092565b6000815180845260208085019450808401835b83811015611e7d5781516001600160a01b031687529582019590820190600101611e58565b509495945050505050565b8154600090819060028104600180831680611ea457607f831692505b6020808410821415611ec457634e487b7160e01b87526022600452602487fd5b818015611ed85760018114611ee957611f15565b60ff19861689528489019650611f15565b611ef28a612254565b885b86811015611f0d5781548b820152908501908301611ef4565b505084890196505b509498975050505050505050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b818110156120295785810183015185820160400152820161200d565b8181111561203a5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600b908201526a5a45524f5f53484152455360a81b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601490820152731514905394d1915497d19493d357d1905253115160621b604082015260600190565b6020808252600f908201526e1514905394d1915497d19052531151608a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d24a72b20a624a22fa9a4a3a722a960911b604082015260600190565b6020808252600b908201526a5a45524f5f41535345545360a81b604082015260600190565b60208082526017908201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604082015260600190565b6000838252604060208301526121e46040830184611e45565b949350505050565b9182521515602082015260400190565b600086825285602083015260a0604083015261221b60a0830186611e45565b6001600160a01b0394909416606083015250608001529392505050565b918252602082015260400190565b60ff91909116815260200190565b60009081526020902090565b6000821982111561227357612273612309565b500190565b60008261229357634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156122b2576122b2612309565b500290565b6000828210156122c9576122c9612309565b500390565b6002810460018216806122e257607f821691505b6020821081141561230357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122047ae68d64d202a57519ef7447c9a6f5bd5db6054ec56bd433125275f061dadde64736f6c63430008010033a2646970667358221220e4277cff2d9d723da6c5e29c3c21242be75587251a7cbda5cf785bf85d5bed4064736f6c63430008010033",
    "sourceMap": "547:3526:11:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;655:61:11;;;-1:-1:-1;;;;;;655:61:11;;;673:42;655:61;;;;722;;;;;740:42;722:61;;;805:103;;;;;865:42;805:103;;;914:86;;;;;;957:42;914:86;;;547:3526;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000b85760003560e01c8063aa4eb636116200007b578063aa4eb6361462000116578063ba414fa61462000120578063de689fdf1462000139578063f0d26e1c1462000150578063f4537502146200015a578063fa7626d4146200017157620000b8565b80630a9254e414620000bd578063389094f214620000c95780635fbf798314620000d3578063700180c614620000ea5780637f924c4e146200010c575b600080fd5b620000c76200017b565b005b620000c7620003b8565b620000c7620000e436600462001482565b620006b5565b620000f46200082c565b60405162000103919062001560565b60405180910390f35b620000c76200083b565b620000c762000986565b6200012a62000e17565b604051620001039190620015ae565b620000c76200014a366004620014b4565b62000f4a565b620000f462001151565b620000c76200016b366004620014b4565b62001166565b6200012a6200126a565b600180546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d179081905560405163c88a5e6d60e01b81526001600160a01b03919091169063c88a5e6d90620001de903090683635c9adc5dea000009060040162001574565b600060405180830381600087803b158015620001f957600080fd5b505af11580156200020e573d6000803e3d6000fd5b5050600880546001600160a01b031990811673601d14b29cb847206568d0ae322f23b32403247f179182905560078054909116735ae34f68cbecca41dfdebed59156b9f90eb7514d17905560015460405163c88a5e6d60e01b81526001600160a01b03918216945063c88a5e6d93506200029a9290911690683635c9adc5dea000009060040162001574565b600060405180830381600087803b158015620002b557600080fd5b505af1158015620002ca573d6000803e3d6000fd5b505060015460075460405163c88a5e6d60e01b81526001600160a01b03928316945063c88a5e6d9350620003109290911690683635c9adc5dea000009060040162001574565b600060405180830381600087803b1580156200032b57600080fd5b505af115801562000340573d6000803e3d6000fd5b5050505060405162000352906200144b565b604051809103906000f0801580156200036f573d6000803e3d6000fd5b506000805462010000600160b01b031916620100006001600160a01b039384168102919091179182905560048054919092049092166001600160a01b0319909216919091179055565b620003cc670de0b6b3a76400003062000f4a565b620003e169021e19e0c9bab2400000620006b5565b6001546001600160a01b031663e5d6bf026200040142620f424062001692565b6040518263ffffffff1660e01b81526004016200041f9190620015b9565b600060405180830381600087803b1580156200043a57600080fd5b505af11580156200044f573d6000803e3d6000fd5b50506000805460405163266d6a8360e11b81529193506201000090046001600160a01b03169150634cdad506906200049490670de0b6b3a764000090600401620015b9565b60206040518083038186803b158015620004ad57600080fd5b505afa158015620004c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e891906200149b565b6002546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906200052090309060040162001560565b60206040518083038186803b1580156200053957600080fd5b505afa1580156200054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200057491906200149b565b600054604051635d043b2960e11b81529192506201000090046001600160a01b03169063ba08765290620005b990670de0b6b3a76400009030908190600401620015c2565b602060405180830381600087803b158015620005d457600080fd5b505af1158015620005e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200060f91906200149b565b506002546040516370a0823160e01b81526000916001600160a01b0316906370a08231906200064390309060040162001560565b60206040518083038186803b1580156200065c57600080fd5b505afa15801562000671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200069791906200149b565b9050620006b0620006a98383620016ad565b8462001273565b505050565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d5690620006fb9073d533a949740bb3306d119cc777fa900ba034cd529060040162001560565b600060405180830381600087803b1580156200071657600080fd5b505af11580156200072b573d6000803e3d6000fd5b505060035460055460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb9350620007689290911690859060040162001574565b602060405180830381600087803b1580156200078357600080fd5b505af115801562000798573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007be919062001459565b50600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200081057600080fd5b505af115801562000825573d6000803e3d6000fd5b5050505050565b6001546001600160a01b031681565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a08231916200086f9130910162001560565b60206040518083038186803b1580156200088857600080fd5b505afa1580156200089d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c391906200149b565b9050620008d9670de0b6b3a76400003062000f4a565b600480546040516370a0823160e01b81526000926001600160a01b03909216916370a08231916200090d9130910162001560565b60206040518083038186803b1580156200092657600080fd5b505afa1580156200093b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096191906200149b565b9050620009826200097b83670de0b6b3a764000062001692565b8262001273565b5050565b600854620009a790670de0b6b3a7640000906001600160a01b031662000f4a565b620009bc69021e19e0c9bab2400000620006b5565b6001546001600160a01b031663e5d6bf02620009dc42620f424062001692565b6040518263ffffffff1660e01b8152600401620009fa9190620015b9565b600060405180830381600087803b15801562000a1557600080fd5b505af115801562000a2a573d6000803e3d6000fd5b505060075462000a4f9250670de0b6b3a764000091506001600160a01b031662000f4a565b62000a6469021e19e0c9bab2400000620006b5565b6001546001600160a01b031663e5d6bf0262000a8442620f424062001692565b6040518263ffffffff1660e01b815260040162000aa29190620015b9565b600060405180830381600087803b15801562000abd57600080fd5b505af115801562000ad2573d6000803e3d6000fd5b50506001546008546040516303223eab60e11b81526001600160a01b0392831694506306447d56935062000b0d929091169060040162001560565b600060405180830381600087803b15801562000b2857600080fd5b505af115801562000b3d573d6000803e3d6000fd5b50506000805460405163266d6a8360e11b81529193506201000090046001600160a01b03169150634cdad5069062000b8290670de0b6b3a764000090600401620015b9565b60206040518083038186803b15801562000b9b57600080fd5b505afa15801562000bb0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd691906200149b565b6002546008546040516370a0823160e01b81529293506000926001600160a01b03928316926370a082319262000c129291169060040162001560565b60206040518083038186803b15801562000c2b57600080fd5b505afa15801562000c40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c6691906200149b565b600054600854604051635d043b2960e11b81529293506001600160a01b036201000090920482169263ba0876529262000cb192670de0b6b3a7640000929116908190600401620015c2565b602060405180830381600087803b15801562000ccc57600080fd5b505af115801562000ce1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d0791906200149b565b506002546008546040516370a0823160e01b81526000926001600160a01b03908116926370a082319262000d42929091169060040162001560565b60206040518083038186803b15801562000d5b57600080fd5b505afa15801562000d70573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d9691906200149b565b905062000da8620006a98383620016ad565b600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000df957600080fd5b505af115801562000e0e573d6000803e3d6000fd5b50505050505050565b60008054610100900460ff161562000e3b5750600054610100900460ff1662000f47565b600062000e476200132e565b1562000f4457604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062000ea69083906519985a5b195960d21b9060200162001574565b60408051601f198184030181529082905262000ec692916020016200152c565b60408051601f198184030181529082905262000ee29162001552565b6000604051808303816000865af19150503d806000811462000f21576040519150601f19603f3d011682016040523d82523d6000602084013e62000f26565b606091505b509150508080602001905181019062000f40919062001459565b9150505b90505b90565b62000f56828262001166565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d569062000f8890849060040162001560565b600060405180830381600087803b15801562000fa357600080fd5b505af115801562000fb8573d6000803e3d6000fd5b505060025460005460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062000ffc926201000090920490911690869060040162001574565b602060405180830381600087803b1580156200101757600080fd5b505af11580156200102c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001052919062001459565b50600054604051636e553f6560e01b8152620100009091046001600160a01b031690636e553f65906200108c90859085906004016200167b565b602060405180830381600087803b158015620010a757600080fd5b505af1158015620010bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010e291906200149b565b50600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200113457600080fd5b505af115801562001149573d6000803e3d6000fd5b505050505050565b6000546201000090046001600160a01b031681565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d5690620011ac907328c6c06298d514db089934071355e5743bf21d609060040162001560565b600060405180830381600087803b158015620011c757600080fd5b505af1158015620011dc573d6000803e3d6000fd5b505060025460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb915062001214908490869060040162001574565b602060405180830381600087803b1580156200122f57600080fd5b505af115801562001244573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010e2919062001459565b60005460ff1681565b80821462000982577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620012aa90620015e1565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620012e3919062001623565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200131c91906200164f565b60405180910390a16200098262001349565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b151590565b620013536200132e565b156200143a57604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620013b59083906519985a5b195960d21b906001906020016200158d565b60408051601f1981840301815290829052620013d592916020016200152c565b60408051601f1981840301815290829052620013f19162001552565b6000604051808303816000865af19150503d806000811462001430576040519150601f19603f3d011682016040523d82523d6000602084013e62001435565b606091505b505050505b6000805461ff001916610100179055565b6128ea80620016de83390190565b6000602082840312156200146b578081fd5b815180151581146200147b578182fd5b9392505050565b60006020828403121562001494578081fd5b5035919050565b600060208284031215620014ad578081fd5b5051919050565b60008060408385031215620014c7578081fd5b8235915060208301356001600160a01b0381168114620014e5578182fd5b809150509250929050565b60008151815b81811015620015125760208185018101518683015201620014f6565b81811115620015215782828601525b509290920192915050565b6001600160e01b03198316815260006200154a6004830184620014f0565b949350505050565b60006200147b8284620014f0565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b901515815260200190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b60208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b6040808252600a90820152690808115e1c1958dd195960b21b6060820152602081019190915260800190565b6040808252600a9082015269080808081058dd1d585b60b21b6060820152602081019190915260800190565b9182526001600160a01b0316602082015260400190565b60008219821115620016a857620016a8620016c7565b500190565b600082821015620016c257620016c2620016c7565b500390565b634e487b7160e01b600052601160045260246000fdfe610100604052600780546001600160a01b031990811673cf50b810e57ac33b91dcf525c6ddd9881b1393321790915560088054821673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f1790556009805482167362b9c7356a2dc64a1969e19c23e4f579f9810aa7179055600a80548216734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b179055600b8054821673d533a949740bb3306d119cc777fa900ba034cd52179055600c805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2179055348015620000d257600080fd5b50600a60009054906101000a90046001600160a01b03166040518060400160405280600a8152602001690a6e8c2d6cac84086acb60b31b815250604051806040016040528060048152602001630e686acb60e31b8152508181846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200016557600080fd5b505afa1580156200017a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a09190620003bf565b8251620001b590600090602086019062000319565b508151620001cb90600190602085019062000319565b507fff0000000000000000000000000000000000000000000000000000000000000060f882901b166080524660a0526200020462000236565b60c052505050505060601b6001600160601b03191660e052620002306200022a620002c3565b620002c7565b62000503565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200026a9190620003e9565b604051908190038120620002a892917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc690469030906020016200048e565b60405160208183030381529060405280519060200120905090565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200032790620004c6565b90600052602060002090601f0160209004810192826200034b576000855562000396565b82601f106200036657805160ff191683800117855562000396565b8280016001018555821562000396579182015b828111156200039657825182559160200191906001019062000379565b50620003a4929150620003a8565b5090565b5b80821115620003a45760008155600101620003a9565b600060208284031215620003d1578081fd5b815160ff81168114620003e2578182fd5b9392505050565b81546000908190600281046001808316806200040657607f831692505b60208084108214156200042757634e487b7160e01b87526022600452602487fd5b8180156200043e5760018114620004505762000480565b60ff1986168952848901965062000480565b6200045b8a620004ba565b885b86811015620004785781548b8201529085019083016200045d565b505084890196505b509498975050505050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60009081526020902090565b600281046001821680620004db57607f821691505b60208210811415620004fd57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160f81c60a05160c05160e05160601c61238b6200055f60003960008181610aae01528181610b1901528181610c3a01528181610e460152610f7d01526000610a8701526000610a5301526000610a2d015261238b6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ecebe001161010f578063c63d75b6116100a2578063d905777e11610071578063d905777e146103df578063dd62ed3e146103f2578063ef8b30f714610405578063f2fde38b14610418576101f0565b8063c63d75b6146102d0578063c6e6f592146103a6578063ce96cb77146103b9578063d505accf146103cc576101f0565b8063a9059cbb116100de578063a9059cbb1461035a578063b3d7f6b91461036d578063b460af9414610380578063ba08765214610393576101f0565b80637ecebe00146103245780638da5cb5b1461033757806394bf804d1461033f57806395d89b4114610352576101f0565b8063313ce567116101875780634cdad506116101565780634cdad506146102e35780636e553f65146102f657806370a0823114610309578063715018a61461031c576101f0565b8063313ce5671461029e5780633644e515146102b357806338d52e0f146102bb578063402d267d146102d0576101f0565b80630a28a477116101c35780630a28a4771461025b578063127565e41461026e57806318160ddd1461028357806323b872dd1461028b576101f0565b806301e1d114146101f557806306fdde031461021357806307a2d13a14610228578063095ea7b31461023b575b600080fd5b6101fd61042b565b60405161020a9190611f76565b60405180910390f35b61021b610730565b60405161020a9190611ffd565b6101fd610236366004611db8565b6107be565b61024e610249366004611cb0565b6107ed565b60405161020a9190611f6b565b6101fd610269366004611db8565b610858565b61028161027c366004611cb0565b610878565b005b6101fd610945565b61024e610299366004611c04565b61094b565b6102a6610a2b565b60405161020a9190612246565b6101fd610a4f565b6102c3610aac565b60405161020a9190611f3e565b6101fd6102de366004611bb8565b610ad0565b6101fd6102f1366004611db8565b610ad7565b6101fd610304366004611de8565b610ae2565b6101fd610317366004611bb8565b610ba2565b610281610bb4565b6101fd610332366004611bb8565b610bff565b6102c3610c11565b6101fd61034d366004611de8565b610c20565b61021b610cc3565b61024e610368366004611cb0565b610cd0565b6101fd61037b366004611db8565b610d34565b6101fd61038e366004611e0a565b610d53565b6101fd6103a1366004611e0a565b610e6d565b6101fd6103b4366004611db8565b610fa4565b6101fd6103c7366004611bb8565b610fc4565b6102816103da366004611c3f565b610fe6565b6101fd6103ed366004611bb8565b6111b0565b6101fd610400366004611bd2565b6111cb565b6101fd610413366004611db8565b6111e8565b610281610426366004611bb8565b6111f3565b600080610436611264565b9050600081156106115760408051600480825260a0820190925260009160208201608080368337505060095482519293506001600160a01b03169183915060009061049157634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600b548251911690829060019081106104d057634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600c5482519116908290600290811061050f57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600a5482519116908290600390811061054e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b815291169063d06ca61f9061058d90869085906004016121cb565b60006040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e19190810190611cd9565b60038151811061060157634e487b7160e01b600052603260045260246000fd5b6020026020010151915050610615565b5060005b600a546040516370a0823160e01b815282916001600160a01b0316906370a0823190610645903090600401611f3e565b60206040518083038186803b15801561065d57600080fd5b505afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106959190611dd0565b6007546040516370a0823160e01b81526001600160a01b03909116906370a08231906106c5903090600401611f3e565b60206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611dd0565b61071f9190612260565b6107299190612260565b9250505090565b6000805461073d906122ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610769906122ce565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b505050505081565b60025460009080156107e2576107dd6107d561042b565b8490836114aa565b6107e4565b825b9150505b919050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610846908690611f76565b60405180910390a35060015b92915050565b60025460009080156107e2576107dd8161087061042b565b8591906114c9565b6108806114f7565b6001600160a01b0316610891610c11565b6001600160a01b0316146108c05760405162461bcd60e51b81526004016108b790612112565b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906108ee9033908590600401611f52565b602060405180830381600087803b15801561090857600080fd5b505af115801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611d98565b505050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146109a75761098283826122b7565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906109cf9084906122b7565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061233683398151915290610a16908790611f76565b60405180910390a360019150505b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000004614610a8557610a806114fb565b610aa7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5060001990565b6000610852826107be565b6000610aed836111e8565b905080610b0c5760405162461bcd60e51b81526004016108b790612050565b610b416001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086611584565b610b4b82826115e7565b816001600160a01b0316336001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78584604051610b90929190612238565b60405180910390a36108528382611645565b60036020526000908152604090205481565b610bbc6114f7565b6001600160a01b0316610bcd610c11565b6001600160a01b031614610bf35760405162461bcd60e51b81526004016108b790612112565b610bfd6000611734565b565b60056020526000908152604090205481565b6006546001600160a01b031690565b6000610c2b83610d34565b9050610c626001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611584565b610c6c82846115e7565b816001600160a01b0316336001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610cb1929190612238565b60405180910390a36108528184611645565b6001805461073d906122ce565b33600090815260036020526040812080548391908390610cf19084906122b7565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061233683398151915290610846908690611f76565b60025460009080156107e2576107dd610d4b61042b565b8490836114c9565b6000610d5e84610858565b9050336001600160a01b03831614610dce576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610dcc57610da782826122b7565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610dd88482611786565b610de28282611ae3565b816001600160a01b0316836001600160a01b0316336001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610e31929190612238565b60405180910390a4610a246001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611b45565b6000336001600160a01b03831614610edd576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610edb57610eb685826122b7565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610ee684610ad7565b905080610f055760405162461bcd60e51b81526004016108b79061216f565b610f0f8185611786565b610f198285611ae3565b816001600160a01b0316836001600160a01b0316336001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610f68929190612238565b60405180910390a4610a246001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611b45565b60025460009080156107e2576107dd81610fbc61042b565b8591906114aa565b6001600160a01b038116600090815260036020526040812054610852906107be565b428410156110065760405162461bcd60e51b81526004016108b790612194565b60006001611012610a4f565b6001600160a01b038a16600090815260056020908152604091829020805460018101909155915161106f927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928e928e928e9290918e9101611f7f565b60405160208183030381529060405280519060200120604051602001611096929190611f23565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516110cc9493929190611fdf565b6020604051602081039080840390855afa1580156110ee573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906111245750876001600160a01b0316816001600160a01b0316145b6111405760405162461bcd60e51b81526004016108b790612147565b6001600160a01b0390811660009081526004602090815260408083208a8516808552925291829020889055905190918916907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061119f908990611f76565b60405180910390a350505050505050565b6001600160a01b031660009081526003602052604090205490565b600460209081526000928352604080842090915290825290205481565b600061085282610fa4565b6111fb6114f7565b6001600160a01b031661120c610c11565b6001600160a01b0316146112325760405162461bcd60e51b81526004016108b790612112565b6001600160a01b0381166112585760405162461bcd60e51b81526004016108b790612075565b61126181611734565b50565b600754604051638b87634760e01b815260009182916001600160a01b0390911690638b87634790611299903090600401611f3e565b60206040518083038186803b1580156112b157600080fd5b505afa1580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611dd0565b600760009054906101000a90046001600160a01b03166001600160a01b031663cd3daf9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561133757600080fd5b505afa15801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190611dd0565b61137991906122b7565b6007546040516370a0823160e01b8152919250600091670de0b6b3a76400009184916001600160a01b03909116906370a08231906113bb903090600401611f3e565b60206040518083038186803b1580156113d357600080fd5b505afa1580156113e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140b9190611dd0565b6114159190612298565b61141f9190612278565b600754604051630700037d60e01b81529192506001600160a01b031690630700037d90611450903090600401611f3e565b60206040518083038186803b15801561146857600080fd5b505afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190611dd0565b6107299082612260565b8282028115158415858304851417166114c257600080fd5b0492915050565b8282028115158415858304851417166114e157600080fd5b6001826001830304018115150290509392505050565b3390565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161152d9190611e88565b60405190819003812061156992917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc69046903090602001611fb3565b60405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115e05760405162461bcd60e51b81526004016108b7906120bb565b5050505050565b80600260008282546115f99190612260565b90915550506001600160a01b0382166000818152600360205260408082208054850190555160008051602061233683398151915290611639908590611f76565b60405180910390a35050565b600a5460075460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261167b929116908690600401611f52565b602060405180830381600087803b15801561169557600080fd5b505af11580156116a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cd9190611d98565b5060075460405163534a7e1d60e11b81526001600160a01b039091169063a694fc3a906116fe908590600401611f76565b600060405180830381600087803b15801561171857600080fd5b505af115801561172c573d6000803e3d6000fd5b505050505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600754604051631c683a1b60e11b81526001600160a01b03909116906338d07436906117b99084906001906004016121ec565b600060405180830381600087803b1580156117d357600080fd5b505af11580156117e7573d6000803e3d6000fd5b50506009546040516370a0823160e01b8152600093506001600160a01b0390911691506370a082319061181e903090600401611f3e565b60206040518083038186803b15801561183657600080fd5b505afa15801561184a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186e9190611dd0565b90508061187b5750611adf565b60095460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926118b1929116908590600401611f52565b602060405180830381600087803b1580156118cb57600080fd5b505af11580156118df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119039190611d98565b5060408051600480825260a0820190925260009160208201608080368337505060095482519293506001600160a01b03169183915060009061195557634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600b5482519116908290600190811061199457634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600c548251911690829060029081106119d357634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600a54825191169082906003908110611a1257634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600854600091166338ed173984838530611a43426001612260565b6040518663ffffffff1660e01b8152600401611a639594939291906121fc565b600060405180830381600087803b158015611a7d57600080fd5b505af1158015611a91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ab99190810190611cd9565b600381518110611ad957634e487b7160e01b600052603260045260246000fd5b50505050505b5050565b6001600160a01b03821660009081526003602052604081208054839290611b0b9084906122b7565b90915550506002805482900390556040516000906001600160a01b0384169060008051602061233683398151915290611639908590611f76565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611b9b5760405162461bcd60e51b81526004016108b7906120e9565b50505050565b80356001600160a01b03811681146107e857600080fd5b600060208284031215611bc9578081fd5b610a2482611ba1565b60008060408385031215611be4578081fd5b611bed83611ba1565b9150611bfb60208401611ba1565b90509250929050565b600080600060608486031215611c18578081fd5b611c2184611ba1565b9250611c2f60208501611ba1565b9150604084013590509250925092565b600080600080600080600060e0888a031215611c59578283fd5b611c6288611ba1565b9650611c7060208901611ba1565b95506040880135945060608801359350608088013560ff81168114611c93578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611cc2578182fd5b611ccb83611ba1565b946020939093013593505050565b60006020808385031215611ceb578182fd5b825167ffffffffffffffff80821115611d02578384fd5b818501915085601f830112611d15578384fd5b815181811115611d2757611d2761231f565b838102604051601f19603f83011681018181108582111715611d4b57611d4b61231f565b604052828152858101935084860182860187018a1015611d69578788fd5b8795505b83861015611d8b578051855260019590950194938601938601611d6d565b5098975050505050505050565b600060208284031215611da9578081fd5b81518015158114610a24578182fd5b600060208284031215611dc9578081fd5b5035919050565b600060208284031215611de1578081fd5b5051919050565b60008060408385031215611dfa578182fd5b82359150611bfb60208401611ba1565b600080600060608486031215611e1e578283fd5b83359250611e2e60208501611ba1565b9150611e3c60408501611ba1565b90509250925092565b6000815180845260208085019450808401835b83811015611e7d5781516001600160a01b031687529582019590820190600101611e58565b509495945050505050565b8154600090819060028104600180831680611ea457607f831692505b6020808410821415611ec457634e487b7160e01b87526022600452602487fd5b818015611ed85760018114611ee957611f15565b60ff19861689528489019650611f15565b611ef28a612254565b885b86811015611f0d5781548b820152908501908301611ef4565b505084890196505b509498975050505050505050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b818110156120295785810183015185820160400152820161200d565b8181111561203a5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600b908201526a5a45524f5f53484152455360a81b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601490820152731514905394d1915497d19493d357d1905253115160621b604082015260600190565b6020808252600f908201526e1514905394d1915497d19052531151608a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d24a72b20a624a22fa9a4a3a722a960911b604082015260600190565b6020808252600b908201526a5a45524f5f41535345545360a81b604082015260600190565b60208082526017908201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604082015260600190565b6000838252604060208301526121e46040830184611e45565b949350505050565b9182521515602082015260400190565b600086825285602083015260a0604083015261221b60a0830186611e45565b6001600160a01b0394909416606083015250608001529392505050565b918252602082015260400190565b60ff91909116815260200190565b60009081526020902090565b6000821982111561227357612273612309565b500190565b60008261229357634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156122b2576122b2612309565b500290565b6000828210156122c9576122c9612309565b500390565b6002810460018216806122e257607f821691505b6020821081141561230357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122047ae68d64d202a57519ef7447c9a6f5bd5db6054ec56bd433125275f061dadde64736f6c63430008010033a2646970667358221220e4277cff2d9d723da6c5e29c3c21242be75587251a7cbda5cf785bf85d5bed4064736f6c63430008010033",
    "sourceMap": "547:3526:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:457;;;:::i;:::-;;1783:641;;;:::i;3758:313::-;;;;;;:::i;:::-;;:::i;628:20::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1507:270;;;:::i;2430:732::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;;;;;:::i;3168:247:11:-;;;;;;:::i;:::-;;:::i;592:29::-;;;:::i;3476:209::-;;;;;;:::i;:::-;;:::i;1572:26:0:-;;;:::i;1043:457:11:-;1098:6;:59;;-1:-1:-1;;;;;;1098:59:11;1114:42;1098:59;;;;;1167:38;;-1:-1:-1;;;1167:38:11;;-1:-1:-1;;;;;1167:6:11;;;;;:11;;:38;;1187:4;;1194:10;;1167:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1230:4:11;:49;;-1:-1:-1;;;;;;1230:49:11;;;1237:42;1230:49;;;;;1289:3;:48;;;;;1295:42;1289:48;;;1230:49;1340:6;:29;;-1:-1:-1;;;1340:29:11;;-1:-1:-1;;;;;1340:6:11;;;;-1:-1:-1;1340:11:11;;-1:-1:-1;1340:29:11;;1352:4;;;;1358:10;;1340:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:6:11;;1384:3;;1372:28;;-1:-1:-1;;;1372:28:11;;-1:-1:-1;;;;;1372:6:11;;;;-1:-1:-1;1372:11:11;;-1:-1:-1;1372:28:11;;1384:3;;;;1389:10;;1372:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1424:9:11;:30;;-1:-1:-1;;;;;;1424:30:11;;-1:-1:-1;;;;;1424:30:11;;;;;;;;;;;;;1461:4;:32;;1482:9;;;;;;;-1:-1:-1;;;;;;1461:32:11;;;;;;;;;1043:457::o;1783:641::-;1848:30;1859:4;1872;1848:10;:30::i;:::-;1908:28;1927:8;1908:18;:28::i;:::-;1939:6;;-1:-1:-1;;;;;1939:6:11;:11;1951:25;:15;1969:7;1951:25;:::i;:::-;1939:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2013:20:11;2036:9;;:29;;-1:-1:-1;;;2036:29:11;;2013:20;;-1:-1:-1;2036:9:11;;;-1:-1:-1;;;;;2036:9:11;;-1:-1:-1;2036:23:11;;:29;;2060:4;;2036:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2095:3;;:28;;-1:-1:-1;;;2095:28:11;;2013:52;;-1:-1:-1;2068:24:11;;-1:-1:-1;;;;;2095:3:11;;;;:13;;:28;;2117:4;;2095:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2154:9;;:50;;-1:-1:-1;;;2154:50:11;;2068:55;;-1:-1:-1;2154:9:11;;;-1:-1:-1;;;;;2154:9:11;;:16;;:50;;2171:4;;2184;;;;2154:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2322:3:11;;:28;;-1:-1:-1;;;2322:28:11;;2296:23;;-1:-1:-1;;;;;2322:3:11;;:13;;:28;;2344:4;;2322:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2296:54;-1:-1:-1;2353:64:11;2362:38;2381:19;2296:54;2362:38;:::i;:::-;2401:15;2353:8;:64::i;:::-;1783:641;;;:::o;3758:313::-;3815:6;;:61;;-1:-1:-1;;;3815:61:11;;-1:-1:-1;;;;;3815:6:11;;;;:17;;:61;;3833:42;;3815:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3886:3:11;;3907:17;;3886:49;;-1:-1:-1;;;3886:49:11;;-1:-1:-1;;;;;3886:3:11;;;;-1:-1:-1;3886:12:11;;-1:-1:-1;3886:49:11;;3907:17;;;;3926:8;;3886:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4046:6;;;;;;;;;-1:-1:-1;;;;;4046:6:11;-1:-1:-1;;;;;4046:16:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3758:313;:::o;628:20::-;;;-1:-1:-1;;;;;628:20:11;;:::o;1507:270::-;1571:4;;;:29;;-1:-1:-1;;;1571:29:11;;1539;;-1:-1:-1;;;;;1571:4:11;;;;:14;;:29;;1594:4;;1571:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1539:61;;1603:30;1614:4;1627;1603:10;:30::i;:::-;1674:4;;;:29;;-1:-1:-1;;;1674:29:11;;1643:28;;-1:-1:-1;;;;;1674:4:11;;;;:14;;:29;;1697:4;;1674:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1643:60;-1:-1:-1;1707:63:11;1716:29;:24;1741:4;1716:29;:::i;:::-;1746:23;1707:8;:63::i;:::-;1507:270;;:::o;2430:732::-;2506:4;;2490:21;;2501:4;;-1:-1:-1;;;;;2506:4:11;2490:10;:21::i;:::-;2543:28;2562:8;2543:18;:28::i;:::-;2581:6;;-1:-1:-1;;;;;2581:6:11;:11;2593:25;:15;2611:7;2593:25;:::i;:::-;2581:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2655:3:11;;2639:20;;-1:-1:-1;2650:4:11;;-1:-1:-1;;;;;;2655:3:11;2639:10;:20::i;:::-;2691:28;2710:8;2691:18;:28::i;:::-;2729:6;;-1:-1:-1;;;;;2729:6:11;:11;2741:25;:15;2759:7;2741:25;:::i;:::-;2729:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2797:6:11;;2815:4;;2797:23;;-1:-1:-1;;;2797:23:11;;-1:-1:-1;;;;;2797:6:11;;;;-1:-1:-1;2797:17:11;;-1:-1:-1;2797:23:11;;2815:4;;;;2797:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2863:20:11;2886:9;;:29;;-1:-1:-1;;;2886:29:11;;2863:20;;-1:-1:-1;2886:9:11;;;-1:-1:-1;;;;;2886:9:11;;-1:-1:-1;2886:23:11;;:29;;2910:4;;2886:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2952:3;;2966:4;;2952:19;;-1:-1:-1;;;2952:19:11;;2863:52;;-1:-1:-1;2925:24:11;;-1:-1:-1;;;;;2952:3:11;;;;:13;;:19;;2966:4;;;2952:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2982:9;;3004:4;;2982:32;;-1:-1:-1;;;2982:32:11;;2925:46;;-1:-1:-1;;;;;;2982:9:11;;;;;;;:16;;:32;;2999:4;;3004;;;;;2982:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3043:3:11;;3057:4;;3043:19;;-1:-1:-1;;;3043:19:11;;3017:23;;-1:-1:-1;;;;;3043:3:11;;;;:13;;:19;;3057:4;;;;3043:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3017:45;-1:-1:-1;3065:64:11;3074:38;3093:19;3017:45;3074:38;:::i;3065:64::-;3137:6;;;;;;;;;-1:-1:-1;;;;;3137:6:11;-1:-1:-1;;;;;3137:16:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2430:732;;;:::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;1896:14;;1869:528;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2196:43;;2023:20;;1671:64;;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;1980:374;;2374:12;-1:-1:-1;1869:528:0;1819:584;:::o;3168:247:11:-;3228:32;3244:7;3252;3228:15;:32::i;:::-;3270:6;;:26;;-1:-1:-1;;;3270:26:11;;-1:-1:-1;;;;;3270:6:11;;;;:17;;:26;;3288:7;;3270:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3299:3:11;;;3319:9;3299:40;;-1:-1:-1;;;3299:40:11;;-1:-1:-1;;;;;3299:3:11;;;;-1:-1:-1;3299:11:11;;-1:-1:-1;3299:40:11;;3319:9;;;;;;;;3331:7;;3299:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3349:9:11;;:34;;-1:-1:-1;;;3349:34:11;;:9;;;;-1:-1:-1;;;;;3349:9:11;;:17;;:34;;3367:7;;3375;;3349:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3390:6;;;;;;;;;-1:-1:-1;;;;;3390:6:11;-1:-1:-1;;;;;3390:16:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3168:247;;:::o;592:29::-;;;;;;-1:-1:-1;;;;;592:29:11;;:::o;3476:209::-;3549:6;;:61;;-1:-1:-1;;;3549:61:11;;-1:-1:-1;;;;;3549:6:11;;;;:17;;:61;;3567:42;;3549:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3620:3:11;;:30;;-1:-1:-1;;;3620:30:11;;-1:-1:-1;;;;;3620:3:11;;;;-1:-1:-1;3620:12:11;;-1:-1:-1;3620:30:11;;3633:7;;3642;;3620:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;;:::o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;;:::i;:::-;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;2840:242::-;2990:42;2978:55;3059:16;;2840:242;:::o;2410:424::-;2449:16;:14;:16::i;:::-;2445:359;;;2645:67;;2482:11;;1671:64;;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:0;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;14:297:12:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:12:o;316:190::-;;428:2;416:9;407:7;403:23;399:32;396:2;;;449:6;441;434:22;396:2;-1:-1:-1;477:23:12;;386:120;-1:-1:-1;386:120:12:o;511:194::-;;634:2;622:9;613:7;609:23;605:32;602:2;;;655:6;647;640:22;602:2;-1:-1:-1;683:16:12;;592:113;-1:-1:-1;592:113:12:o;710:374::-;;;839:2;827:9;818:7;814:23;810:32;807:2;;;860:6;852;845:22;807:2;888:23;;;-1:-1:-1;961:2:12;946:18;;933:32;-1:-1:-1;;;;;994:31:12;;984:42;;974:2;;1045:6;1037;1030:22;974:2;1073:5;1063:15;;;797:287;;;;;:::o;1089:342::-;;1170:5;1164:12;1194:3;1206:128;1220:6;1217:1;1214:13;1206:128;;;1317:4;1302:13;;;1298:24;;1292:31;1279:11;;;1272:52;1235:12;1206:128;;;1352:6;1349:1;1346:13;1343:2;;;1387:3;1378:6;1373:3;1369:16;1362:29;1343:2;-1:-1:-1;1409:16:12;;;;;1140:291;-1:-1:-1;;1140:291:12:o;1436:280::-;-1:-1:-1;;;;;;1621:33:12;;1609:46;;1436:280;1671:39;1707:1;1698:11;;1690:6;1671:39;:::i;:::-;1664:46;1599:117;-1:-1:-1;;;;1599:117:12:o;1721:191::-;;1875:31;1902:3;1894:6;1875:31;:::i;1917:203::-;-1:-1:-1;;;;;2081:32:12;;;;2063:51;;2051:2;2036:18;;2018:102::o;2125:274::-;-1:-1:-1;;;;;2317:32:12;;;;2299:51;;2381:2;2366:18;;2359:34;2287:2;2272:18;;2254:145::o;2404:345::-;-1:-1:-1;;;;;2624:32:12;;;;2606:51;;2688:2;2673:18;;2666:34;;;;2731:2;2716:18;;2709:34;2594:2;2579:18;;2561:188::o;3341:187::-;3506:14;;3499:22;3481:41;;3469:2;3454:18;;3436:92::o;3985:203::-;4157:25;;;4145:2;4130:18;;4112:76::o;4193:401::-;4421:25;;;-1:-1:-1;;;;;4520:15:12;;;4515:2;4500:18;;4493:43;4572:15;4567:2;4552:18;;4545:43;4409:2;4394:18;;4376:218::o;4599:398::-;4801:2;4783:21;;;4840:2;4820:18;;;4813:30;4879:34;4874:2;4859:18;;4852:62;-1:-1:-1;;;4945:2:12;4930:18;;4923:32;4987:3;4972:19;;4773:224::o;5002:408::-;5232:2;5214:21;;;5271:2;5251:18;;;5244:30;-1:-1:-1;;;5305:2:12;5290:18;;5283:40;5390:4;5375:20;;5368:36;;;;5355:3;5340:19;;5204:206::o;5415:408::-;5645:2;5627:21;;;5684:2;5664:18;;;5657:30;-1:-1:-1;;;5718:2:12;5703:18;;5696:40;5803:4;5788:20;;5781:36;;;;5768:3;5753:19;;5617:206::o;6010:274::-;6184:25;;;-1:-1:-1;;;;;6245:32:12;6240:2;6225:18;;6218:60;6172:2;6157:18;;6139:145::o;6289:128::-;;6360:1;6356:6;6353:1;6350:13;6347:2;;;6366:18;;:::i;:::-;-1:-1:-1;6402:9:12;;6337:80::o;6422:125::-;;6490:1;6487;6484:8;6481:2;;;6495:18;;:::i;:::-;-1:-1:-1;6532:9:12;;6471:76::o;6552:127::-;6613:10;6608:3;6604:20;6601:1;6594:31;6644:4;6641:1;6634:15;6668:4;6665:1;6658:15",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/src/test/tokenizer.t.sol",
    "id": 4276,
    "exportedSymbols": {
      "Cheats": [
        3883
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        2822
      ],
      "ERC4626": [
        2434
      ],
      "ICRVDepositor": [
        3046
      ],
      "ICVXStakingContract": [
        3103
      ],
      "IUniRouter": [
        3496
      ],
      "Ownable": [
        1891
      ],
      "TokenizerSetup": [
        4275
      ],
      "cvxTokenizer": [
        3848
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:4075:11",
    "nodes": [
      {
        "id": 3850,
        "nodeType": "PragmaDirective",
        "src": "0:23:11",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ]
      },
      {
        "id": 3851,
        "nodeType": "ImportDirective",
        "src": "25:26:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "scope": 4276,
        "sourceUnit": 1787,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3852,
        "nodeType": "ImportDirective",
        "src": "52:29:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/src/cvxTokenizer.sol",
        "file": "../cvxTokenizer.sol",
        "scope": 4276,
        "sourceUnit": 3849,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3853,
        "nodeType": "ImportDirective",
        "src": "82:35:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/lib/solmate/src/tokens/ERC20.sol",
        "file": "@solmate/tokens/ERC20.sol",
        "scope": 4276,
        "sourceUnit": 2823,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3855,
        "nodeType": "ImportDirective",
        "src": "118:62:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/src/Interfaces/ICRVDepositor.sol",
        "file": "../Interfaces/ICRVDepositor.sol",
        "scope": 4276,
        "sourceUnit": 3047,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3854,
              "name": "ICRVDepositor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "126:13:11",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3857,
        "nodeType": "ImportDirective",
        "src": "181:74:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/src/Interfaces/ICVXStakingContract.sol",
        "file": "../Interfaces/ICVXStakingContract.sol",
        "scope": 4276,
        "sourceUnit": 3104,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3856,
              "name": "ICVXStakingContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "189:19:11",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3883,
        "nodeType": "ContractDefinition",
        "src": "257:236:11",
        "nodes": [
          {
            "id": 3864,
            "nodeType": "FunctionDefinition",
            "src": "280:52:11",
            "functionSelector": "c88a5e6d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deal",
            "parameters": {
              "id": 3862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3859,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 3864,
                  "src": "294:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3861,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3864,
                  "src": "307:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "307:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:29:11"
            },
            "returnParameters": {
              "id": 3863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:11"
            },
            "scope": 3883,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3869,
            "nodeType": "FunctionDefinition",
            "src": "337:45:11",
            "functionSelector": "06447d56",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "startPrank",
            "parameters": {
              "id": 3867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3866,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3869,
                  "src": "357:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:16:11"
            },
            "returnParameters": {
              "id": 3868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:11"
            },
            "scope": 3883,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3872,
            "nodeType": "FunctionDefinition",
            "src": "387:30:11",
            "functionSelector": "90c5013b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stopPrank",
            "parameters": {
              "id": 3870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:11"
            },
            "returnParameters": {
              "id": 3871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:0:11"
            },
            "scope": 3883,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3877,
            "nodeType": "FunctionDefinition",
            "src": "422:32:11",
            "functionSelector": "1f7b4f30",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "roll",
            "parameters": {
              "id": 3875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3874,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3877,
                  "src": "436:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:9:11"
            },
            "returnParameters": {
              "id": 3876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:11"
            },
            "scope": 3883,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3882,
            "nodeType": "FunctionDefinition",
            "src": "459:32:11",
            "functionSelector": "e5d6bf02",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "warp",
            "parameters": {
              "id": 3880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3879,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3882,
                  "src": "473:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:9:11"
            },
            "returnParameters": {
              "id": 3881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:11"
            },
            "scope": 3883,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          3883
        ],
        "name": "Cheats",
        "scope": 4276
      },
      {
        "id": 4275,
        "nodeType": "ContractDefinition",
        "src": "547:3526:11",
        "nodes": [
          {
            "id": 3889,
            "nodeType": "VariableDeclaration",
            "src": "592:29:11",
            "constant": false,
            "functionSelector": "f0d26e1c",
            "mutability": "mutable",
            "name": "tokenizer",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
              "typeString": "contract cvxTokenizer"
            },
            "typeName": {
              "id": 3888,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3887,
                "name": "cvxTokenizer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3848,
                "src": "592:12:11"
              },
              "referencedDeclaration": 3848,
              "src": "592:12:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                "typeString": "contract cvxTokenizer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3892,
            "nodeType": "VariableDeclaration",
            "src": "628:20:11",
            "constant": false,
            "functionSelector": "700180c6",
            "mutability": "mutable",
            "name": "cheats",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Cheats_$3883",
              "typeString": "contract Cheats"
            },
            "typeName": {
              "id": 3891,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3890,
                "name": "Cheats",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3883,
                "src": "628:6:11"
              },
              "referencedDeclaration": 3883,
              "src": "628:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cheats_$3883",
                "typeString": "contract Cheats"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3898,
            "nodeType": "VariableDeclaration",
            "src": "655:61:11",
            "constant": false,
            "mutability": "mutable",
            "name": "CVX",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2822",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 3894,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3893,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2822,
                "src": "655:5:11"
              },
              "referencedDeclaration": 2822,
              "src": "655:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
                  "id": 3896,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "673:42:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3895,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2822,
                "src": "667:5:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2822_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 3897,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "667:49:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3904,
            "nodeType": "VariableDeclaration",
            "src": "722:61:11",
            "constant": false,
            "mutability": "mutable",
            "name": "CRV",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2822",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 3900,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3899,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2822,
                "src": "722:5:11"
              },
              "referencedDeclaration": 2822,
              "src": "722:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 3902,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "740:42:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3901,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2822,
                "src": "734:5:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2822_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 3903,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "734:49:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3907,
            "nodeType": "VariableDeclaration",
            "src": "789:10:11",
            "constant": false,
            "mutability": "mutable",
            "name": "sCVX",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2822",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 3906,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3905,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2822,
                "src": "789:5:11"
              },
              "referencedDeclaration": 2822,
              "src": "789:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3913,
            "nodeType": "VariableDeclaration",
            "src": "805:103:11",
            "constant": false,
            "mutability": "mutable",
            "name": "cvxStakerContract",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
              "typeString": "contract ICVXStakingContract"
            },
            "typeName": {
              "id": 3909,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3908,
                "name": "ICVXStakingContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3103,
                "src": "805:19:11"
              },
              "referencedDeclaration": 3103,
              "src": "805:19:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
                "typeString": "contract ICVXStakingContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843463530623831304535374163333342393164434635323543366464643938383142313339333332",
                  "id": 3911,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "865:42:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xCF50b810E57Ac33B91dCF525C6ddd9881B139332"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3910,
                "name": "ICVXStakingContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3103,
                "src": "845:19:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ICVXStakingContract_$3103_$",
                  "typeString": "type(contract ICVXStakingContract)"
                }
              },
              "id": 3912,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "845:63:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
                "typeString": "contract ICVXStakingContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3919,
            "nodeType": "VariableDeclaration",
            "src": "914:86:11",
            "constant": false,
            "mutability": "mutable",
            "name": "CRVDepositor",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICRVDepositor_$3046",
              "typeString": "contract ICRVDepositor"
            },
            "typeName": {
              "id": 3915,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3914,
                "name": "ICRVDepositor",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3046,
                "src": "914:13:11"
              },
              "referencedDeclaration": 3046,
              "src": "914:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICRVDepositor_$3046",
                "typeString": "contract ICRVDepositor"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307838303134353935463241423534634437633630344230304539666239333231373666446338364165",
                  "id": 3917,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "957:42:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x8014595F2AB54cD7c604B00E9fb932176fDc86Ae"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3916,
                "name": "ICRVDepositor",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3046,
                "src": "943:13:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ICRVDepositor_$3046_$",
                  "typeString": "type(contract ICRVDepositor)"
                }
              },
              "id": 3918,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "943:57:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICRVDepositor_$3046",
                "typeString": "contract ICRVDepositor"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3921,
            "nodeType": "VariableDeclaration",
            "src": "1007:11:11",
            "constant": false,
            "mutability": "mutable",
            "name": "Ben",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3920,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1007:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3923,
            "nodeType": "VariableDeclaration",
            "src": "1024:12:11",
            "constant": false,
            "mutability": "mutable",
            "name": "Anna",
            "scope": 4275,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3922,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1024:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3981,
            "nodeType": "FunctionDefinition",
            "src": "1043:457:11",
            "body": {
              "id": 3980,
              "nodeType": "Block",
              "src": "1067:433:11",
              "statements": [
                {
                  "expression": {
                    "id": 3930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3926,
                      "name": "cheats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3892,
                      "src": "1098:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cheats_$3883",
                        "typeString": "contract Cheats"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                          "id": 3928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1114:42:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3927,
                        "name": "Cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3883,
                        "src": "1107:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Cheats_$3883_$",
                          "typeString": "type(contract Cheats)"
                        }
                      },
                      "id": 3929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1107:50:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cheats_$3883",
                        "typeString": "contract Cheats"
                      }
                    },
                    "src": "1098:59:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cheats_$3883",
                      "typeString": "contract Cheats"
                    }
                  },
                  "id": 3931,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:59:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3937,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1187:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 3936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1179:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3935,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1179:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1179:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 3939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1194:10:11",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 3932,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "1167:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 3934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3864,
                      "src": "1167:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3941,
                  "nodeType": "ExpressionStatement",
                  "src": "1167:38:11"
                },
                {
                  "expression": {
                    "id": 3944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3942,
                      "name": "Anna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3923,
                      "src": "1230:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307836303164313442323943423834373230363536384430614533323266323342333234303332343746",
                      "id": 3943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1237:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x601d14B29CB847206568D0aE322f23B32403247F"
                    },
                    "src": "1230:49:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3945,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:49:11"
                },
                {
                  "expression": {
                    "id": 3948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3946,
                      "name": "Ben",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3921,
                      "src": "1289:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307835614533344636386362654343613431446664656265643539313536423946393065623735313464",
                      "id": 3947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1295:42:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x5aE34F68cbeCCa41Dfdebed59156B9F90eb7514d"
                    },
                    "src": "1289:48:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3949,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:48:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3953,
                        "name": "Anna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "1352:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 3954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1358:10:11",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 3950,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "1340:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 3952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3864,
                      "src": "1340:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3956,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:29:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3960,
                        "name": "Ben",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3921,
                        "src": "1384:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 3961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1389:10:11",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 3957,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "1372:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 3959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3864,
                      "src": "1372:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3963,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:28:11"
                },
                {
                  "expression": {
                    "id": 3969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3964,
                      "name": "tokenizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3889,
                      "src": "1424:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                        "typeString": "contract cvxTokenizer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1436:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_cvxTokenizer_$3848_$",
                          "typeString": "function () returns (contract cvxTokenizer)"
                        },
                        "typeName": {
                          "id": 3966,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3965,
                            "name": "cvxTokenizer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3848,
                            "src": "1440:12:11"
                          },
                          "referencedDeclaration": 3848,
                          "src": "1440:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                            "typeString": "contract cvxTokenizer"
                          }
                        }
                      },
                      "id": 3968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1436:18:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                        "typeString": "contract cvxTokenizer"
                      }
                    },
                    "src": "1424:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                      "typeString": "contract cvxTokenizer"
                    }
                  },
                  "id": 3970,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:30:11"
                },
                {
                  "expression": {
                    "id": 3978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3971,
                      "name": "sCVX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3907,
                      "src": "1461:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2822",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3975,
                              "name": "tokenizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3889,
                              "src": "1482:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                                "typeString": "contract cvxTokenizer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                                "typeString": "contract cvxTokenizer"
                              }
                            ],
                            "id": 3974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1474:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3973,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1474:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1474:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3972,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2822,
                        "src": "1468:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$2822_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 3977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1468:25:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$2822",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1461:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$2822",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 3979,
                  "nodeType": "ExpressionStatement",
                  "src": "1461:32:11"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "parameters": {
              "id": 3924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:2:11"
            },
            "returnParameters": {
              "id": 3925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:11"
            },
            "scope": 4275,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4020,
            "nodeType": "FunctionDefinition",
            "src": "1507:270:11",
            "body": {
              "id": 4019,
              "nodeType": "Block",
              "src": "1536:241:11",
              "statements": [
                {
                  "assignments": [
                    3985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3985,
                      "mutability": "mutable",
                      "name": "sCVXBalanceBeforeDeposit",
                      "nodeType": "VariableDeclaration",
                      "scope": 4019,
                      "src": "1539:29:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3984,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1539:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3993,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3990,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1594:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 3989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1586:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3988,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1586:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1586:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3986,
                        "name": "sCVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3907,
                        "src": "1571:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2465,
                      "src": "1571:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1539:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 3995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1614:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "id": 3998,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1627:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 3997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1619:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3996,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1619:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1619:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3994,
                      "name": "depositCVX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "1603:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4001,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:30:11"
                },
                {
                  "assignments": [
                    4003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4003,
                      "mutability": "mutable",
                      "name": "sCVXBalanceAfterDeposit",
                      "nodeType": "VariableDeclaration",
                      "scope": 4019,
                      "src": "1643:28:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4002,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1643:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4011,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4008,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1697:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1689:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4006,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1689:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1689:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4004,
                        "name": "sCVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3907,
                        "src": "1674:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2465,
                      "src": "1674:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1643:60:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4013,
                          "name": "sCVXBalanceBeforeDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3985,
                          "src": "1716:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 4014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1741:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1716:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4016,
                        "name": "sCVXBalanceAfterDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4003,
                        "src": "1746:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4012,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1707:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:63:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4018,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:63:11"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "parameters": {
              "id": 3982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:2:11"
            },
            "returnParameters": {
              "id": 3983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:0:11"
            },
            "scope": 4275,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4093,
            "nodeType": "FunctionDefinition",
            "src": "1783:641:11",
            "body": {
              "id": 4092,
              "nodeType": "Block",
              "src": "1815:609:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1859:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "id": 4027,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1872:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1864:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4025,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1864:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1864:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4023,
                      "name": "depositCVX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "1848:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1848:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030653138",
                        "id": 4032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1927:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "id": 4031,
                      "name": "ConvexEarnsProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4274,
                      "src": "1908:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4034,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4038,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1951:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1951:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 4040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1969:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "1951:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4035,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "1939:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3882,
                      "src": "1939:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4043,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:38:11"
                },
                {
                  "assignments": [
                    4045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4045,
                      "mutability": "mutable",
                      "name": "estimatedAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 4092,
                      "src": "2013:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4044,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2013:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4050,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2060:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4046,
                        "name": "tokenizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3889,
                        "src": "2036:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                          "typeString": "contract cvxTokenizer"
                        }
                      },
                      "id": 4047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "previewRedeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2363,
                      "src": "2036:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2013:52:11"
                },
                {
                  "assignments": [
                    4052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4052,
                      "mutability": "mutable",
                      "name": "balanceBeforeRedeem",
                      "nodeType": "VariableDeclaration",
                      "scope": 4092,
                      "src": "2068:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4051,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2068:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4060,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4057,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2117:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2109:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4055,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2109:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2109:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4053,
                        "name": "CVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3898,
                        "src": "2095:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2465,
                      "src": "2095:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2095:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2068:55:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2171:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "id": 4067,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2184:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2176:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4065,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2176:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2176:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4071,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2198:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2190:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4069,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2190:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2190:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4061,
                        "name": "tokenizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3889,
                        "src": "2154:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                          "typeString": "contract cvxTokenizer"
                        }
                      },
                      "id": 4063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2238,
                      "src": "2154:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 4073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4074,
                  "nodeType": "ExpressionStatement",
                  "src": "2154:50:11"
                },
                {
                  "assignments": [
                    4076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4076,
                      "mutability": "mutable",
                      "name": "balanceAfterRedeem",
                      "nodeType": "VariableDeclaration",
                      "scope": 4092,
                      "src": "2296:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4075,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2296:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4084,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4081,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2344:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4275",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2336:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4079,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2336:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2336:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4077,
                        "name": "CVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3898,
                        "src": "2322:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2465,
                      "src": "2322:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2322:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2296:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4086,
                          "name": "balanceAfterRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4076,
                          "src": "2362:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 4087,
                          "name": "balanceBeforeRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4052,
                          "src": "2381:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2362:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4089,
                        "name": "estimatedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4045,
                        "src": "2401:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4085,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2353:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:64:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4091,
                  "nodeType": "ExpressionStatement",
                  "src": "2353:64:11"
                }
              ]
            },
            "functionSelector": "389094f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawl",
            "parameters": {
              "id": 4021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1805:2:11"
            },
            "returnParameters": {
              "id": 4022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1815:0:11"
            },
            "scope": 4275,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4180,
            "nodeType": "FunctionDefinition",
            "src": "2430:732:11",
            "body": {
              "id": 4179,
              "nodeType": "Block",
              "src": "2470:692:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2501:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "id": 4098,
                        "name": "Anna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "2506:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4096,
                      "name": "depositCVX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "2490:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2490:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4100,
                  "nodeType": "ExpressionStatement",
                  "src": "2490:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030653138",
                        "id": 4102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2562:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "id": 4101,
                      "name": "ConvexEarnsProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4274,
                      "src": "2543:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2543:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4104,
                  "nodeType": "ExpressionStatement",
                  "src": "2543:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4108,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2593:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2593:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 4110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2611:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "2593:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4105,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "2581:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3882,
                      "src": "2581:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4113,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:38:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2650:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "id": 4116,
                        "name": "Ben",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3921,
                        "src": "2655:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4114,
                      "name": "depositCVX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4221,
                      "src": "2639:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2639:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4118,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:20:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030653138",
                        "id": 4120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2710:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "id": 4119,
                      "name": "ConvexEarnsProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4274,
                      "src": "2691:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2691:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4122,
                  "nodeType": "ExpressionStatement",
                  "src": "2691:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4126,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2741:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2741:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 4128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2759:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "2741:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4123,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "2729:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3882,
                      "src": "2729:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2729:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4131,
                  "nodeType": "ExpressionStatement",
                  "src": "2729:38:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4135,
                        "name": "Anna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "2815:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4132,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "2797:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3869,
                      "src": "2797:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2797:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4137,
                  "nodeType": "ExpressionStatement",
                  "src": "2797:23:11"
                },
                {
                  "assignments": [
                    4139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4139,
                      "mutability": "mutable",
                      "name": "estimatedAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 4179,
                      "src": "2863:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4138,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2863:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4144,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2910:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4140,
                        "name": "tokenizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3889,
                        "src": "2886:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                          "typeString": "contract cvxTokenizer"
                        }
                      },
                      "id": 4141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "previewRedeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2363,
                      "src": "2886:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 4143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2886:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2863:52:11"
                },
                {
                  "assignments": [
                    4146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4146,
                      "mutability": "mutable",
                      "name": "balanceBeforeRedeem",
                      "nodeType": "VariableDeclaration",
                      "scope": 4179,
                      "src": "2925:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4145,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2925:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4151,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4149,
                        "name": "Anna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "2966:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4147,
                        "name": "CVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3898,
                        "src": "2952:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2465,
                      "src": "2952:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2952:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2925:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2999:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "id": 4156,
                        "name": "Anna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "3004:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4157,
                        "name": "Anna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "3009:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4152,
                        "name": "tokenizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3889,
                        "src": "2982:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                          "typeString": "contract cvxTokenizer"
                        }
                      },
                      "id": 4154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2238,
                      "src": "2982:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 4158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2982:32:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4159,
                  "nodeType": "ExpressionStatement",
                  "src": "2982:32:11"
                },
                {
                  "assignments": [
                    4161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4161,
                      "mutability": "mutable",
                      "name": "balanceAfterRedeem",
                      "nodeType": "VariableDeclaration",
                      "scope": 4179,
                      "src": "3017:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4160,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3017:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4166,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4164,
                        "name": "Anna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "3057:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4162,
                        "name": "CVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3898,
                        "src": "3043:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2465,
                      "src": "3043:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3043:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3017:45:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4168,
                          "name": "balanceAfterRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4161,
                          "src": "3074:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 4169,
                          "name": "balanceBeforeRedeem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4146,
                          "src": "3093:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3074:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4171,
                        "name": "estimatedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4139,
                        "src": "3113:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4167,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3065:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3065:64:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4173,
                  "nodeType": "ExpressionStatement",
                  "src": "3065:64:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4174,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "3137:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3872,
                      "src": "3137:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3137:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4178,
                  "nodeType": "ExpressionStatement",
                  "src": "3137:18:11"
                }
              ]
            },
            "functionSelector": "aa4eb636",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMultiUserWithdraw",
            "parameters": {
              "id": 4094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2460:2:11"
            },
            "returnParameters": {
              "id": 4095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2470:0:11"
            },
            "scope": 4275,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4221,
            "nodeType": "FunctionDefinition",
            "src": "3168:247:11",
            "body": {
              "id": 4220,
              "nodeType": "Block",
              "src": "3225:190:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4188,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4182,
                        "src": "3244:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4189,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4184,
                        "src": "3252:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4187,
                      "name": "receiveCVXFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4247,
                      "src": "3228:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 4190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3228:32:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4191,
                  "nodeType": "ExpressionStatement",
                  "src": "3228:32:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4195,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4184,
                        "src": "3288:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4192,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "3270:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3869,
                      "src": "3270:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4197,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:26:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4203,
                            "name": "tokenizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3889,
                            "src": "3319:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                              "typeString": "contract cvxTokenizer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                              "typeString": "contract cvxTokenizer"
                            }
                          ],
                          "id": 4202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3311:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4201,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3311:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3311:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4205,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4182,
                        "src": "3331:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4198,
                        "name": "CVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3898,
                        "src": "3299:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2539,
                      "src": "3299:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3299:40:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4207,
                  "nodeType": "ExpressionStatement",
                  "src": "3299:40:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4211,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4182,
                        "src": "3367:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4212,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4184,
                        "src": "3375:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4208,
                        "name": "tokenizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3889,
                        "src": "3349:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_cvxTokenizer_$3848",
                          "typeString": "contract cvxTokenizer"
                        }
                      },
                      "id": 4210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2030,
                      "src": "3349:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 4213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3349:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4214,
                  "nodeType": "ExpressionStatement",
                  "src": "3349:34:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4215,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "3390:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3872,
                      "src": "3390:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3390:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4219,
                  "nodeType": "ExpressionStatement",
                  "src": "3390:18:11"
                }
              ]
            },
            "functionSelector": "de689fdf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositCVX",
            "parameters": {
              "id": 4185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4182,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4221,
                  "src": "3188:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4181,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3188:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4184,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 4221,
                  "src": "3202:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3187:31:11"
            },
            "returnParameters": {
              "id": 4186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3225:0:11"
            },
            "scope": 4275,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4247,
            "nodeType": "FunctionDefinition",
            "src": "3476:209:11",
            "body": {
              "id": 4246,
              "nodeType": "Block",
              "src": "3539:146:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307832384336633036323938643531344462303839393334303731333535453537343362663231643630",
                        "id": 4231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3567:42:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x28C6c06298d514Db089934071355E5743bf21d60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4228,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "3549:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3869,
                      "src": "3549:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3549:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4233,
                  "nodeType": "ExpressionStatement",
                  "src": "3549:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4237,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "3633:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4238,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4223,
                        "src": "3642:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4234,
                        "name": "CVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3898,
                        "src": "3620:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2572,
                      "src": "3620:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3620:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4240,
                  "nodeType": "ExpressionStatement",
                  "src": "3620:30:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4241,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "3660:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3872,
                      "src": "3660:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4245,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:18:11"
                }
              ]
            },
            "functionSelector": "f4537502",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveCVXFunds",
            "parameters": {
              "id": 4226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4223,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4247,
                  "src": "3501:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3501:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4225,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 4247,
                  "src": "3515:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3515:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3500:31:11"
            },
            "returnParameters": {
              "id": 4227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3539:0:11"
            },
            "scope": 4275,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4274,
            "nodeType": "FunctionDefinition",
            "src": "3758:313:11",
            "body": {
              "id": 4273,
              "nodeType": "Block",
              "src": "3808:263:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                        "id": 4255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3833:42:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4252,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "3815:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3869,
                      "src": "3815:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3815:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4257,
                  "nodeType": "ExpressionStatement",
                  "src": "3815:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4263,
                            "name": "cvxStakerContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3913,
                            "src": "3907:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
                              "typeString": "contract ICVXStakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
                              "typeString": "contract ICVXStakingContract"
                            }
                          ],
                          "id": 4262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3899:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3899:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3899:26:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4265,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4249,
                        "src": "3926:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4258,
                        "name": "CRV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3904,
                        "src": "3886:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2572,
                      "src": "3886:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3886:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4267,
                  "nodeType": "ExpressionStatement",
                  "src": "3886:49:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4268,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3892,
                        "src": "4046:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3883",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3872,
                      "src": "4046:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4046:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4272,
                  "nodeType": "ExpressionStatement",
                  "src": "4046:18:11"
                }
              ]
            },
            "functionSelector": "5fbf7983",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ConvexEarnsProfits",
            "parameters": {
              "id": 4250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4249,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 4274,
                  "src": "3786:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4248,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3786:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3785:15:11"
            },
            "returnParameters": {
              "id": 4251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3808:0:11"
            },
            "scope": 4275,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3885,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "574:6:11"
            },
            "id": 3886,
            "nodeType": "InheritanceSpecifier",
            "src": "574:6:11"
          }
        ],
        "contractDependencies": [
          1786,
          3848
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3884,
          "nodeType": "StructuredDocumentation",
          "src": "495:51:11",
          "text": " Helper contract for this project's tests"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4275,
          1786
        ],
        "name": "TokenizerSetup",
        "scope": 4276
      }
    ]
  }
}