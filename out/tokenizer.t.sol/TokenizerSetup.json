{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amounts",
          "type": "uint256"
        }
      ],
      "name": "ConvexEarnsProfits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheats",
      "outputs": [
        {
          "internalType": "contract Cheats",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCVX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenizer",
      "outputs": [
        {
          "internalType": "contract cvxTokenizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff19166001179055600280546001600160a01b0319908116734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b1790915560038054821673d533a949740bb3306d119cc777fa900ba034cd5217905560048054821673cf50b810e57ac33b91dcf525c6ddd9881b13933217905560058054909116738014595f2ab54cd7c604b00e9fb932176fdc86ae1790553480156100a157600080fd5b5061395f806100b16000396000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c80637f924c4e116200006f5780637f924c4e14620000f4578063ba414fa614620000fe578063e567c0221462000117578063f0d26e1c1462000121578063fa7626d4146200012b57620000a0565b80630a9254e414620000a5578063389094f214620000b15780635fbf798314620000bb578063700180c614620000d2575b600080fd5b620000af62000135565b005b620000af62000220565b620000af620000cc36600462000bd6565b620005f6565b620000dc6200076c565b604051620000eb919062000c78565b60405180910390f35b620000af6200077b565b62000108620008b8565b604051620000eb919062000ca5565b620000af620009eb565b620000dc62000b66565b6200010862000b7b565b600180546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d179081905560405163c88a5e6d60e01b81526001600160a01b03919091169063c88a5e6d9062000198903090683635c9adc5dea000009060040162000c8c565b600060405180830381600087803b158015620001b357600080fd5b505af1158015620001c8573d6000803e3d6000fd5b50505050604051620001da9062000b9f565b604051809103906000f080158015620001f7573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6002546040516370a0823160e01b81527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8916001600160a01b0316906370a08231906200027290309060040162000c78565b60206040518083038186803b1580156200028b57600080fd5b505afa158015620002a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c6919062000bef565b604051620002d5919062000d52565b60405180910390a1620002e76200077b565b6002546040516370a0823160e01b81527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8916001600160a01b0316906370a08231906200033990309060040162000c78565b60206040518083038186803b1580156200035257600080fd5b505afa15801562000367573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038d919062000bef565b6040516200039c919062000d1d565b60405180910390a16001546001600160a01b031663e5d6bf02620003c442620f424062000d91565b6040518263ffffffff1660e01b8152600401620003e2919062000d88565b600060405180830381600087803b158015620003fd57600080fd5b505af115801562000412573d6000803e3d6000fd5b505050506200042b69021e19e0c9bab2400000620005f6565b6001546001600160a01b031663e5d6bf026200044b42620f424062000d91565b6040518263ffffffff1660e01b815260040162000469919062000d88565b600060405180830381600087803b1580156200048457600080fd5b505af115801562000499573d6000803e3d6000fd5b5050600054604051635d043b2960e11b8152620100009091046001600160a01b0316925063ba0876529150620004e090670de0b6b3a7640000903090819060040162000cc7565b602060405180830381600087803b158015620004fb57600080fd5b505af115801562000510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000536919062000bef565b506002546040516370a0823160e01b81527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8916001600160a01b0316906370a08231906200058990309060040162000c78565b60206040518083038186803b158015620005a257600080fd5b505afa158015620005b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005dd919062000bef565b604051620005ec919062000ce6565b60405180910390a1565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d56906200063c9073d533a949740bb3306d119cc777fa900ba034cd529060040162000c78565b600060405180830381600087803b1580156200065757600080fd5b505af11580156200066c573d6000803e3d6000fd5b50506003546004805460405163a9059cbb60e01b81526001600160a01b03938416955063a9059cbb9450620006a8939091169186910162000c8c565b602060405180830381600087803b158015620006c357600080fd5b505af1158015620006d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006fe919062000bad565b50600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200075057600080fd5b505af115801562000765573d6000803e3d6000fd5b5050505050565b6001546001600160a01b031681565b62000785620009eb565b60025460005460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620007c79262010000909104909116906000199060040162000c8c565b602060405180830381600087803b158015620007e257600080fd5b505af1158015620007f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200081d919062000bad565b50600054604051636e553f6560e01b8152620100009091046001600160a01b031690636e553f65906200085f90670de0b6b3a764000090309060040162000cb0565b602060405180830381600087803b1580156200087a57600080fd5b505af11580156200088f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008b5919062000bef565b50565b60008054610100900460ff1615620008dc5750600054610100900460ff16620009e8565b6000620008e862000b84565b15620009e557604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620009479083906519985a5b195960d21b9060200162000c8c565b60408051601f198184030181529082905262000967929160200162000c44565b60408051601f1981840301815290829052620009839162000c6a565b6000604051808303816000865af19150503d8060008114620009c2576040519150601f19603f3d011682016040523d82523d6000602084013e620009c7565b606091505b5091505080806020019051810190620009e1919062000bad565b9150505b90505b90565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d569062000a31907328c6c06298d514db089934071355e5743bf21d609060040162000c78565b600060405180830381600087803b15801562000a4c57600080fd5b505af115801562000a61573d6000803e3d6000fd5b505060025460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb915062000aa390309069d3c21bcecceda10000009060040162000c8c565b602060405180830381600087803b15801562000abe57600080fd5b505af115801562000ad3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000af9919062000bad565b50600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000b4b57600080fd5b505af115801562000b60573d6000803e3d6000fd5b50505050565b6000546201000090046001600160a01b031681565b60005460ff1681565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b151590565b612b738062000db783390190565b60006020828403121562000bbf578081fd5b8151801515811462000bcf578182fd5b9392505050565b60006020828403121562000be8578081fd5b5035919050565b60006020828403121562000c01578081fd5b5051919050565b60008151815b8181101562000c2a576020818501810151868301520162000c0e565b8181111562000c395782828601525b509290920192915050565b6001600160e01b031983168152600062000c62600483018462000c08565b949350505050565b600062000bcf828462000c08565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03918216602084015216604082015260600190565b604080825260159082015274021ab2c1030b33a32b9103bb4ba34323930bbb61d1605d1b6060820152602081019190915260800190565b604080825260139082015272021ab2c1030b33a32b9103232b837b9b4ba1d1606d1b6060820152602081019190915260800190565b604080825260149082015273021ab2c103132b337b932903232b837b9b4ba1d160651b6060820152602081019190915260800190565b90815260200190565b6000821982111562000db157634e487b7160e01b81526011600452602481fd5b50019056fe610100604052600780546001600160a01b031990811673cf50b810e57ac33b91dcf525c6ddd9881b1393321790915560088054821673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f1790556009805482167362b9c7356a2dc64a1969e19c23e4f579f9810aa7179055600a80548216734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b179055600b8054821673d533a949740bb3306d119cc777fa900ba034cd52179055600c805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2179055348015620000d257600080fd5b50600a60009054906101000a90046001600160a01b03166040518060400160405280600a8152602001690a6e8c2d6cac84086acb60b31b815250604051806040016040528060048152602001630e686acb60e31b8152508181846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200016557600080fd5b505afa1580156200017a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a09190620003bf565b8251620001b590600090602086019062000319565b508151620001cb90600190602085019062000319565b507fff0000000000000000000000000000000000000000000000000000000000000060f882901b166080524660a0526200020462000236565b60c052505050505060601b6001600160601b03191660e052620002306200022a620002c3565b620002c7565b62000503565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200026a9190620003e9565b604051908190038120620002a892917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc690469030906020016200048e565b60405160208183030381529060405280519060200120905090565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200032790620004c6565b90600052602060002090601f0160209004810192826200034b576000855562000396565b82601f106200036657805160ff191683800117855562000396565b8280016001018555821562000396579182015b828111156200039657825182559160200191906001019062000379565b50620003a4929150620003a8565b5090565b5b80821115620003a45760008155600101620003a9565b600060208284031215620003d1578081fd5b815160ff81168114620003e2578182fd5b9392505050565b81546000908190600281046001808316806200040657607f831692505b60208084108214156200042757634e487b7160e01b87526022600452602487fd5b8180156200043e5760018114620004505762000480565b60ff1986168952848901965062000480565b6200045b8a620004ba565b885b86811015620004785781548b8201529085019083016200045d565b505084890196505b509498975050505050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60009081526020902090565b600281046001821680620004db57607f821691505b60208210811415620004fd57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160f81c60a05160c05160e05160601c6126146200055f60003960008181610aae01528181610b1901528181610c3a01528181610e460152610f7d01526000610a8701526000610a5301526000610a2d01526126146000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ecebe001161010f578063c63d75b6116100a2578063d905777e11610071578063d905777e146103df578063dd62ed3e146103f2578063ef8b30f714610405578063f2fde38b14610418576101f0565b8063c63d75b6146102d0578063c6e6f592146103a6578063ce96cb77146103b9578063d505accf146103cc576101f0565b8063a9059cbb116100de578063a9059cbb1461035a578063b3d7f6b91461036d578063b460af9414610380578063ba08765214610393576101f0565b80637ecebe00146103245780638da5cb5b1461033757806394bf804d1461033f57806395d89b4114610352576101f0565b8063313ce567116101875780634cdad506116101565780634cdad506146102e35780636e553f65146102f657806370a0823114610309578063715018a61461031c576101f0565b8063313ce5671461029e5780633644e515146102b357806338d52e0f146102bb578063402d267d146102d0576101f0565b80630a28a477116101c35780630a28a4771461025b578063127565e41461026e57806318160ddd1461028357806323b872dd1461028b576101f0565b806301e1d114146101f557806306fdde031461021357806307a2d13a14610228578063095ea7b31461023b575b600080fd5b6101fd61042b565b60405161020a919061210f565b60405180910390f35b61021b610730565b60405161020a9190612196565b6101fd610236366004611f51565b6107be565b61024e610249366004611e49565b6107ed565b60405161020a9190612104565b6101fd610269366004611f51565b610858565b61028161027c366004611e49565b610878565b005b6101fd610945565b61024e610299366004611d9d565b61094b565b6102a6610a2b565b60405161020a91906124af565b6101fd610a4f565b6102c3610aac565b60405161020a91906120d7565b6101fd6102de366004611d51565b610ad0565b6101fd6102f1366004611f51565b610ad7565b6101fd610304366004611f81565b610ae2565b6101fd610317366004611d51565b610ba2565b610281610bb4565b6101fd610332366004611d51565b610bff565b6102c3610c11565b6101fd61034d366004611f81565b610c20565b61021b610cc3565b61024e610368366004611e49565b610cd0565b6101fd61037b366004611f51565b610d34565b6101fd61038e366004611fa3565b610d53565b6101fd6103a1366004611fa3565b610e6d565b6101fd6103b4366004611f51565b610fa4565b6101fd6103c7366004611d51565b610fc4565b6102816103da366004611dd8565b610fe6565b6101fd6103ed366004611d51565b6111b0565b6101fd610400366004611d6b565b6111cb565b6101fd610413366004611f51565b6111e8565b610281610426366004611d51565b6111f3565b600080610436611264565b9050600081156106115760408051600480825260a0820190925260009160208201608080368337505060095482519293506001600160a01b03169183915060009061049157634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600b548251911690829060019081106104d057634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600c5482519116908290600290811061050f57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600a5482519116908290600390811061054e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b815291169063d06ca61f9061058d9086908590600401612434565b60006040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e19190810190611e72565b60008151811061060157634e487b7160e01b600052603260045260246000fd5b6020026020010151915050610615565b5060005b600a546040516370a0823160e01b815282916001600160a01b0316906370a08231906106459030906004016120d7565b60206040518083038186803b15801561065d57600080fd5b505afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106959190611f69565b6007546040516370a0823160e01b81526001600160a01b03909116906370a08231906106c59030906004016120d7565b60206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611f69565b61071f91906124c9565b61072991906124c9565b9250505090565b6000805461073d90612537565b80601f016020809104026020016040519081016040528092919081815260200182805461076990612537565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b505050505081565b60025460009080156107e2576107dd6107d561042b565b8490836114aa565b6107e4565b825b9150505b919050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061084690869061210f565b60405180910390a35060015b92915050565b60025460009080156107e2576107dd8161087061042b565b8591906114c9565b6108806114f7565b6001600160a01b0316610891610c11565b6001600160a01b0316146108c05760405162461bcd60e51b81526004016108b79061237b565b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906108ee90339085906004016120eb565b602060405180830381600087803b15801561090857600080fd5b505af115801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611f31565b505050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146109a7576109828382612520565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906109cf908490612520565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061259f83398151915290610a1690879061210f565b60405180910390a360019150505b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000004614610a8557610a806114fb565b610aa7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5060001990565b6000610852826107be565b6000610aed836111e8565b905080610b0c5760405162461bcd60e51b81526004016108b790612250565b610b416001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086611584565b610b4b82826115e7565b816001600160a01b0316336001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78584604051610b909291906124a1565b60405180910390a36108528382611645565b60036020526000908152604090205481565b610bbc6114f7565b6001600160a01b0316610bcd610c11565b6001600160a01b031614610bf35760405162461bcd60e51b81526004016108b79061237b565b610bfd6000611734565b565b60056020526000908152604090205481565b6006546001600160a01b031690565b6000610c2b83610d34565b9050610c626001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611584565b610c6c82846115e7565b816001600160a01b0316336001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610cb19291906124a1565b60405180910390a36108528184611645565b6001805461073d90612537565b33600090815260036020526040812080548391908390610cf1908490612520565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061259f8339815191529061084690869061210f565b60025460009080156107e2576107dd610d4b61042b565b8490836114c9565b6000610d5e84610858565b9050336001600160a01b03831614610dce576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610dcc57610da78282612520565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610dd88482611786565b610de28282611c7c565b816001600160a01b0316836001600160a01b0316336001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610e319291906124a1565b60405180910390a4610a246001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611cde565b6000336001600160a01b03831614610edd576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610edb57610eb68582612520565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610ee684610ad7565b905080610f055760405162461bcd60e51b81526004016108b7906123d8565b610f0f8185611786565b610f198285611c7c565b816001600160a01b0316836001600160a01b0316336001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610f689291906124a1565b60405180910390a4610a246001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611cde565b60025460009080156107e2576107dd81610fbc61042b565b8591906114aa565b6001600160a01b038116600090815260036020526040812054610852906107be565b428410156110065760405162461bcd60e51b81526004016108b7906123fd565b60006001611012610a4f565b6001600160a01b038a16600090815260056020908152604091829020805460018101909155915161106f927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928e928e928e9290918e9101612118565b604051602081830303815290604052805190602001206040516020016110969291906120bc565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516110cc9493929190612178565b6020604051602081039080840390855afa1580156110ee573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906111245750876001600160a01b0316816001600160a01b0316145b6111405760405162461bcd60e51b81526004016108b7906123b0565b6001600160a01b0390811660009081526004602090815260408083208a8516808552925291829020889055905190918916907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061119f90899061210f565b60405180910390a350505050505050565b6001600160a01b031660009081526003602052604090205490565b600460209081526000928352604080842090915290825290205481565b600061085282610fa4565b6111fb6114f7565b6001600160a01b031661120c610c11565b6001600160a01b0316146112325760405162461bcd60e51b81526004016108b79061237b565b6001600160a01b0381166112585760405162461bcd60e51b81526004016108b7906122a9565b61126181611734565b50565b600754604051638b87634760e01b815260009182916001600160a01b0390911690638b876347906112999030906004016120d7565b60206040518083038186803b1580156112b157600080fd5b505afa1580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611f69565b600760009054906101000a90046001600160a01b03166001600160a01b031663cd3daf9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561133757600080fd5b505afa15801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190611f69565b6113799190612520565b6007546040516370a0823160e01b8152919250600091670de0b6b3a76400009184916001600160a01b03909116906370a08231906113bb9030906004016120d7565b60206040518083038186803b1580156113d357600080fd5b505afa1580156113e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140b9190611f69565b6114159190612501565b61141f91906124e1565b600754604051630700037d60e01b81529192506001600160a01b031690630700037d906114509030906004016120d7565b60206040518083038186803b15801561146857600080fd5b505afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190611f69565b61072990826124c9565b8282028115158415858304851417166114c257600080fd5b0492915050565b8282028115158415858304851417166114e157600080fd5b6001826001830304018115150290509392505050565b3390565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161152d9190612021565b60405190819003812061156992917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6904690309060200161214c565b60405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115e05760405162461bcd60e51b81526004016108b7906122ef565b5050505050565b80600260008282546115f991906124c9565b90915550506001600160a01b0382166000818152600360205260408082208054850190555160008051602061259f8339815191529061163990859061210f565b60405180910390a35050565b600a5460075460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261167b9291169086906004016120eb565b602060405180830381600087803b15801561169557600080fd5b505af11580156116a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cd9190611f31565b5060075460405163534a7e1d60e11b81526001600160a01b039091169063a694fc3a906116fe90859060040161210f565b600060405180830381600087803b15801561171857600080fd5b505af115801561172c573d6000803e3d6000fd5b505050505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000805160206125bf833981519152826040516117a391906121e9565b60405180910390a1600754604051631c683a1b60e11b81526001600160a01b03909116906338d07436906117de908590600190600401612455565b600060405180830381600087803b1580156117f857600080fd5b505af115801561180c573d6000803e3d6000fd5b50506009546040516370a0823160e01b8152600093506001600160a01b0390911691506370a08231906118439030906004016120d7565b60206040518083038186803b15801561185b57600080fd5b505afa15801561186f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118939190611f69565b905080156118a15750611c78565b60095460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926118d79291169085906004016120eb565b602060405180830381600087803b1580156118f157600080fd5b505af1158015611905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119299190611f31565b50600a546040516370a0823160e01b81526000805160206125bf833981519152916001600160a01b0316906370a08231906119689030906004016120d7565b60206040518083038186803b15801561198057600080fd5b505afa158015611994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b89190611f69565b6040516119c59190612275565b60405180910390a160408051600480825260a0820190925260009160208201608080368337505060095482519293506001600160a01b031691839150600090611a1e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600b54825191169082906001908110611a5d57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600c54825191169082906002908110611a9c57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600a54825191169082906003908110611adb57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600854600091166338ed173984838530611b0c4260016124c9565b6040518663ffffffff1660e01b8152600401611b2c959493929190612465565b600060405180830381600087803b158015611b4657600080fd5b505af1158015611b5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b829190810190611e72565b600081518110611ba257634e487b7160e01b600052603260045260246000fd5b602002602001015190506000805160206125bf83398151915281604051611bc9919061231d565b60405180910390a1600a546040516370a0823160e01b81526000805160206125bf833981519152916001600160a01b0316906370a0823190611c0f9030906004016120d7565b60206040518083038186803b158015611c2757600080fd5b505afa158015611c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5f9190611f69565b604051611c6c919061221d565b60405180910390a15050505b5050565b6001600160a01b03821660009081526003602052604081208054839290611ca4908490612520565b90915550506002805482900390556040516000906001600160a01b0384169060008051602061259f8339815191529061163990859061210f565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611d345760405162461bcd60e51b81526004016108b790612352565b50505050565b80356001600160a01b03811681146107e857600080fd5b600060208284031215611d62578081fd5b610a2482611d3a565b60008060408385031215611d7d578081fd5b611d8683611d3a565b9150611d9460208401611d3a565b90509250929050565b600080600060608486031215611db1578081fd5b611dba84611d3a565b9250611dc860208501611d3a565b9150604084013590509250925092565b600080600080600080600060e0888a031215611df2578283fd5b611dfb88611d3a565b9650611e0960208901611d3a565b95506040880135945060608801359350608088013560ff81168114611e2c578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e5b578182fd5b611e6483611d3a565b946020939093013593505050565b60006020808385031215611e84578182fd5b825167ffffffffffffffff80821115611e9b578384fd5b818501915085601f830112611eae578384fd5b815181811115611ec057611ec0612588565b838102604051601f19603f83011681018181108582111715611ee457611ee4612588565b604052828152858101935084860182860187018a1015611f02578788fd5b8795505b83861015611f24578051855260019590950194938601938601611f06565b5098975050505050505050565b600060208284031215611f42578081fd5b81518015158114610a24578182fd5b600060208284031215611f62578081fd5b5035919050565b600060208284031215611f7a578081fd5b5051919050565b60008060408385031215611f93578182fd5b82359150611d9460208401611d3a565b600080600060608486031215611fb7578283fd5b83359250611fc760208501611d3a565b9150611fd560408501611d3a565b90509250925092565b6000815180845260208085019450808401835b838110156120165781516001600160a01b031687529582019590820190600101611ff1565b509495945050505050565b815460009081906002810460018083168061203d57607f831692505b602080841082141561205d57634e487b7160e01b87526022600452602487fd5b8180156120715760018114612082576120ae565b60ff198616895284890196506120ae565b61208b8a6124bd565b885b868110156120a65781548b82015290850190830161208d565b505084890196505b509498975050505050505050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b818110156121c2578581018301518582016040015282016121a6565b818111156121d35783604083870101525b50601f01601f1916929092016040019392505050565b60408082526012908201527102ab739ba30b5b4b7339020b9b9b2ba399d160751b6060820152602081019190915260800190565b604080825260119082015270021ab2c1030b33a32b9102a3930b2329d1607d1b6060820152602081019190915260800190565b6020808252600b908201526a5a45524f5f53484152455360a81b604082015260600190565b604080825260129082015271021ab2c103132b337b932902a3930b2329d160751b6060820152602081019190915260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601490820152731514905394d1915497d19493d357d1905253115160621b604082015260600190565b60408082526013908201527202a3930b232a932ba3ab93720a6b7bab73a1d1606d1b6060820152602081019190915260800190565b6020808252600f908201526e1514905394d1915497d19052531151608a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d24a72b20a624a22fa9a4a3a722a960911b604082015260600190565b6020808252600b908201526a5a45524f5f41535345545360a81b604082015260600190565b60208082526017908201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604082015260600190565b60008382526040602083015261244d6040830184611fde565b949350505050565b9182521515602082015260400190565b600086825285602083015260a0604083015261248460a0830186611fde565b6001600160a01b0394909416606083015250608001529392505050565b918252602082015260400190565b60ff91909116815260200190565b60009081526020902090565b600082198211156124dc576124dc612572565b500190565b6000826124fc57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561251b5761251b612572565b500290565b60008282101561253257612532612572565b500390565b60028104600182168061254b57607f821691505b6020821081141561256c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a26469706673582212201efaf0bcadafea701509e38a8f4bac870397f176c02dde87e494b79b5ecb75d564736f6c63430008010033a2646970667358221220a807dbc2c87927e57470b393a7c197bc6f0101b90b14dab6bbe1e9125534e2df64736f6c63430008010033",
    "sourceMap": "547:2042:11:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;655:61:11;;;-1:-1:-1;;;;;;655:61:11;;;673:42;655:61;;;;722;;;;;740:42;722:61;;;789:103;;;;;849:42;789:103;;;898:86;;;;;;941:42;898:86;;;547:2042;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c80637f924c4e116200006f5780637f924c4e14620000f4578063ba414fa614620000fe578063e567c0221462000117578063f0d26e1c1462000121578063fa7626d4146200012b57620000a0565b80630a9254e414620000a5578063389094f214620000b15780635fbf798314620000bb578063700180c614620000d2575b600080fd5b620000af62000135565b005b620000af62000220565b620000af620000cc36600462000bd6565b620005f6565b620000dc6200076c565b604051620000eb919062000c78565b60405180910390f35b620000af6200077b565b62000108620008b8565b604051620000eb919062000ca5565b620000af620009eb565b620000dc62000b66565b6200010862000b7b565b600180546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d179081905560405163c88a5e6d60e01b81526001600160a01b03919091169063c88a5e6d9062000198903090683635c9adc5dea000009060040162000c8c565b600060405180830381600087803b158015620001b357600080fd5b505af1158015620001c8573d6000803e3d6000fd5b50505050604051620001da9062000b9f565b604051809103906000f080158015620001f7573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6002546040516370a0823160e01b81527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8916001600160a01b0316906370a08231906200027290309060040162000c78565b60206040518083038186803b1580156200028b57600080fd5b505afa158015620002a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c6919062000bef565b604051620002d5919062000d52565b60405180910390a1620002e76200077b565b6002546040516370a0823160e01b81527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8916001600160a01b0316906370a08231906200033990309060040162000c78565b60206040518083038186803b1580156200035257600080fd5b505afa15801562000367573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038d919062000bef565b6040516200039c919062000d1d565b60405180910390a16001546001600160a01b031663e5d6bf02620003c442620f424062000d91565b6040518263ffffffff1660e01b8152600401620003e2919062000d88565b600060405180830381600087803b158015620003fd57600080fd5b505af115801562000412573d6000803e3d6000fd5b505050506200042b69021e19e0c9bab2400000620005f6565b6001546001600160a01b031663e5d6bf026200044b42620f424062000d91565b6040518263ffffffff1660e01b815260040162000469919062000d88565b600060405180830381600087803b1580156200048457600080fd5b505af115801562000499573d6000803e3d6000fd5b5050600054604051635d043b2960e11b8152620100009091046001600160a01b0316925063ba0876529150620004e090670de0b6b3a7640000903090819060040162000cc7565b602060405180830381600087803b158015620004fb57600080fd5b505af115801562000510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000536919062000bef565b506002546040516370a0823160e01b81527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8916001600160a01b0316906370a08231906200058990309060040162000c78565b60206040518083038186803b158015620005a257600080fd5b505afa158015620005b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005dd919062000bef565b604051620005ec919062000ce6565b60405180910390a1565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d56906200063c9073d533a949740bb3306d119cc777fa900ba034cd529060040162000c78565b600060405180830381600087803b1580156200065757600080fd5b505af11580156200066c573d6000803e3d6000fd5b50506003546004805460405163a9059cbb60e01b81526001600160a01b03938416955063a9059cbb9450620006a8939091169186910162000c8c565b602060405180830381600087803b158015620006c357600080fd5b505af1158015620006d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006fe919062000bad565b50600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200075057600080fd5b505af115801562000765573d6000803e3d6000fd5b5050505050565b6001546001600160a01b031681565b62000785620009eb565b60025460005460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620007c79262010000909104909116906000199060040162000c8c565b602060405180830381600087803b158015620007e257600080fd5b505af1158015620007f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200081d919062000bad565b50600054604051636e553f6560e01b8152620100009091046001600160a01b031690636e553f65906200085f90670de0b6b3a764000090309060040162000cb0565b602060405180830381600087803b1580156200087a57600080fd5b505af11580156200088f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008b5919062000bef565b50565b60008054610100900460ff1615620008dc5750600054610100900460ff16620009e8565b6000620008e862000b84565b15620009e557604051600090737109709ecfa91a80626ff3989d68f67f5b1dd12d907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620009479083906519985a5b195960d21b9060200162000c8c565b60408051601f198184030181529082905262000967929160200162000c44565b60408051601f1981840301815290829052620009839162000c6a565b6000604051808303816000865af19150503d8060008114620009c2576040519150601f19603f3d011682016040523d82523d6000602084013e620009c7565b606091505b5091505080806020019051810190620009e1919062000bad565b9150505b90505b90565b6001546040516303223eab60e11b81526001600160a01b03909116906306447d569062000a31907328c6c06298d514db089934071355e5743bf21d609060040162000c78565b600060405180830381600087803b15801562000a4c57600080fd5b505af115801562000a61573d6000803e3d6000fd5b505060025460405163a9059cbb60e01b81526001600160a01b03909116925063a9059cbb915062000aa390309069d3c21bcecceda10000009060040162000c8c565b602060405180830381600087803b15801562000abe57600080fd5b505af115801562000ad3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000af9919062000bad565b50600160009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000b4b57600080fd5b505af115801562000b60573d6000803e3d6000fd5b50505050565b6000546201000090046001600160a01b031681565b60005460ff1681565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b151590565b612b738062000db783390190565b60006020828403121562000bbf578081fd5b8151801515811462000bcf578182fd5b9392505050565b60006020828403121562000be8578081fd5b5035919050565b60006020828403121562000c01578081fd5b5051919050565b60008151815b8181101562000c2a576020818501810151868301520162000c0e565b8181111562000c395782828601525b509290920192915050565b6001600160e01b031983168152600062000c62600483018462000c08565b949350505050565b600062000bcf828462000c08565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03918216602084015216604082015260600190565b604080825260159082015274021ab2c1030b33a32b9103bb4ba34323930bbb61d1605d1b6060820152602081019190915260800190565b604080825260139082015272021ab2c1030b33a32b9103232b837b9b4ba1d1606d1b6060820152602081019190915260800190565b604080825260149082015273021ab2c103132b337b932903232b837b9b4ba1d160651b6060820152602081019190915260800190565b90815260200190565b6000821982111562000db157634e487b7160e01b81526011600452602481fd5b50019056fe610100604052600780546001600160a01b031990811673cf50b810e57ac33b91dcf525c6ddd9881b1393321790915560088054821673d9e1ce17f2641f24ae83637ab66a2cca9c378b9f1790556009805482167362b9c7356a2dc64a1969e19c23e4f579f9810aa7179055600a80548216734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b179055600b8054821673d533a949740bb3306d119cc777fa900ba034cd52179055600c805490911673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2179055348015620000d257600080fd5b50600a60009054906101000a90046001600160a01b03166040518060400160405280600a8152602001690a6e8c2d6cac84086acb60b31b815250604051806040016040528060048152602001630e686acb60e31b8152508181846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200016557600080fd5b505afa1580156200017a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a09190620003bf565b8251620001b590600090602086019062000319565b508151620001cb90600190602085019062000319565b507fff0000000000000000000000000000000000000000000000000000000000000060f882901b166080524660a0526200020462000236565b60c052505050505060601b6001600160601b03191660e052620002306200022a620002c3565b620002c7565b62000503565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200026a9190620003e9565b604051908190038120620002a892917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc690469030906020016200048e565b60405160208183030381529060405280519060200120905090565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200032790620004c6565b90600052602060002090601f0160209004810192826200034b576000855562000396565b82601f106200036657805160ff191683800117855562000396565b8280016001018555821562000396579182015b828111156200039657825182559160200191906001019062000379565b50620003a4929150620003a8565b5090565b5b80821115620003a45760008155600101620003a9565b600060208284031215620003d1578081fd5b815160ff81168114620003e2578182fd5b9392505050565b81546000908190600281046001808316806200040657607f831692505b60208084108214156200042757634e487b7160e01b87526022600452602487fd5b8180156200043e5760018114620004505762000480565b60ff1986168952848901965062000480565b6200045b8a620004ba565b885b86811015620004785781548b8201529085019083016200045d565b505084890196505b509498975050505050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60009081526020902090565b600281046001821680620004db57607f821691505b60208210811415620004fd57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160f81c60a05160c05160e05160601c6126146200055f60003960008181610aae01528181610b1901528181610c3a01528181610e460152610f7d01526000610a8701526000610a5301526000610a2d01526126146000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ecebe001161010f578063c63d75b6116100a2578063d905777e11610071578063d905777e146103df578063dd62ed3e146103f2578063ef8b30f714610405578063f2fde38b14610418576101f0565b8063c63d75b6146102d0578063c6e6f592146103a6578063ce96cb77146103b9578063d505accf146103cc576101f0565b8063a9059cbb116100de578063a9059cbb1461035a578063b3d7f6b91461036d578063b460af9414610380578063ba08765214610393576101f0565b80637ecebe00146103245780638da5cb5b1461033757806394bf804d1461033f57806395d89b4114610352576101f0565b8063313ce567116101875780634cdad506116101565780634cdad506146102e35780636e553f65146102f657806370a0823114610309578063715018a61461031c576101f0565b8063313ce5671461029e5780633644e515146102b357806338d52e0f146102bb578063402d267d146102d0576101f0565b80630a28a477116101c35780630a28a4771461025b578063127565e41461026e57806318160ddd1461028357806323b872dd1461028b576101f0565b806301e1d114146101f557806306fdde031461021357806307a2d13a14610228578063095ea7b31461023b575b600080fd5b6101fd61042b565b60405161020a919061210f565b60405180910390f35b61021b610730565b60405161020a9190612196565b6101fd610236366004611f51565b6107be565b61024e610249366004611e49565b6107ed565b60405161020a9190612104565b6101fd610269366004611f51565b610858565b61028161027c366004611e49565b610878565b005b6101fd610945565b61024e610299366004611d9d565b61094b565b6102a6610a2b565b60405161020a91906124af565b6101fd610a4f565b6102c3610aac565b60405161020a91906120d7565b6101fd6102de366004611d51565b610ad0565b6101fd6102f1366004611f51565b610ad7565b6101fd610304366004611f81565b610ae2565b6101fd610317366004611d51565b610ba2565b610281610bb4565b6101fd610332366004611d51565b610bff565b6102c3610c11565b6101fd61034d366004611f81565b610c20565b61021b610cc3565b61024e610368366004611e49565b610cd0565b6101fd61037b366004611f51565b610d34565b6101fd61038e366004611fa3565b610d53565b6101fd6103a1366004611fa3565b610e6d565b6101fd6103b4366004611f51565b610fa4565b6101fd6103c7366004611d51565b610fc4565b6102816103da366004611dd8565b610fe6565b6101fd6103ed366004611d51565b6111b0565b6101fd610400366004611d6b565b6111cb565b6101fd610413366004611f51565b6111e8565b610281610426366004611d51565b6111f3565b600080610436611264565b9050600081156106115760408051600480825260a0820190925260009160208201608080368337505060095482519293506001600160a01b03169183915060009061049157634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600b548251911690829060019081106104d057634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600c5482519116908290600290811061050f57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600a5482519116908290600390811061054e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b815291169063d06ca61f9061058d9086908590600401612434565b60006040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e19190810190611e72565b60008151811061060157634e487b7160e01b600052603260045260246000fd5b6020026020010151915050610615565b5060005b600a546040516370a0823160e01b815282916001600160a01b0316906370a08231906106459030906004016120d7565b60206040518083038186803b15801561065d57600080fd5b505afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106959190611f69565b6007546040516370a0823160e01b81526001600160a01b03909116906370a08231906106c59030906004016120d7565b60206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611f69565b61071f91906124c9565b61072991906124c9565b9250505090565b6000805461073d90612537565b80601f016020809104026020016040519081016040528092919081815260200182805461076990612537565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b505050505081565b60025460009080156107e2576107dd6107d561042b565b8490836114aa565b6107e4565b825b9150505b919050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061084690869061210f565b60405180910390a35060015b92915050565b60025460009080156107e2576107dd8161087061042b565b8591906114c9565b6108806114f7565b6001600160a01b0316610891610c11565b6001600160a01b0316146108c05760405162461bcd60e51b81526004016108b79061237b565b60405180910390fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906108ee90339085906004016120eb565b602060405180830381600087803b15801561090857600080fd5b505af115801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611f31565b505050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146109a7576109828382612520565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906109cf908490612520565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061259f83398151915290610a1690879061210f565b60405180910390a360019150505b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000004614610a8557610a806114fb565b610aa7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5060001990565b6000610852826107be565b6000610aed836111e8565b905080610b0c5760405162461bcd60e51b81526004016108b790612250565b610b416001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086611584565b610b4b82826115e7565b816001600160a01b0316336001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78584604051610b909291906124a1565b60405180910390a36108528382611645565b60036020526000908152604090205481565b610bbc6114f7565b6001600160a01b0316610bcd610c11565b6001600160a01b031614610bf35760405162461bcd60e51b81526004016108b79061237b565b610bfd6000611734565b565b60056020526000908152604090205481565b6006546001600160a01b031690565b6000610c2b83610d34565b9050610c626001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611584565b610c6c82846115e7565b816001600160a01b0316336001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610cb19291906124a1565b60405180910390a36108528184611645565b6001805461073d90612537565b33600090815260036020526040812080548391908390610cf1908490612520565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061259f8339815191529061084690869061210f565b60025460009080156107e2576107dd610d4b61042b565b8490836114c9565b6000610d5e84610858565b9050336001600160a01b03831614610dce576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610dcc57610da78282612520565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610dd88482611786565b610de28282611c7c565b816001600160a01b0316836001600160a01b0316336001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610e319291906124a1565b60405180910390a4610a246001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611cde565b6000336001600160a01b03831614610edd576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610edb57610eb68582612520565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610ee684610ad7565b905080610f055760405162461bcd60e51b81526004016108b7906123d8565b610f0f8185611786565b610f198285611c7c565b816001600160a01b0316836001600160a01b0316336001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610f689291906124a1565b60405180910390a4610a246001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611cde565b60025460009080156107e2576107dd81610fbc61042b565b8591906114aa565b6001600160a01b038116600090815260036020526040812054610852906107be565b428410156110065760405162461bcd60e51b81526004016108b7906123fd565b60006001611012610a4f565b6001600160a01b038a16600090815260056020908152604091829020805460018101909155915161106f927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928e928e928e9290918e9101612118565b604051602081830303815290604052805190602001206040516020016110969291906120bc565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516110cc9493929190612178565b6020604051602081039080840390855afa1580156110ee573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906111245750876001600160a01b0316816001600160a01b0316145b6111405760405162461bcd60e51b81526004016108b7906123b0565b6001600160a01b0390811660009081526004602090815260408083208a8516808552925291829020889055905190918916907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061119f90899061210f565b60405180910390a350505050505050565b6001600160a01b031660009081526003602052604090205490565b600460209081526000928352604080842090915290825290205481565b600061085282610fa4565b6111fb6114f7565b6001600160a01b031661120c610c11565b6001600160a01b0316146112325760405162461bcd60e51b81526004016108b79061237b565b6001600160a01b0381166112585760405162461bcd60e51b81526004016108b7906122a9565b61126181611734565b50565b600754604051638b87634760e01b815260009182916001600160a01b0390911690638b876347906112999030906004016120d7565b60206040518083038186803b1580156112b157600080fd5b505afa1580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611f69565b600760009054906101000a90046001600160a01b03166001600160a01b031663cd3daf9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561133757600080fd5b505afa15801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190611f69565b6113799190612520565b6007546040516370a0823160e01b8152919250600091670de0b6b3a76400009184916001600160a01b03909116906370a08231906113bb9030906004016120d7565b60206040518083038186803b1580156113d357600080fd5b505afa1580156113e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140b9190611f69565b6114159190612501565b61141f91906124e1565b600754604051630700037d60e01b81529192506001600160a01b031690630700037d906114509030906004016120d7565b60206040518083038186803b15801561146857600080fd5b505afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190611f69565b61072990826124c9565b8282028115158415858304851417166114c257600080fd5b0492915050565b8282028115158415858304851417166114e157600080fd5b6001826001830304018115150290509392505050565b3390565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161152d9190612021565b60405190819003812061156992917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6904690309060200161214c565b60405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115e05760405162461bcd60e51b81526004016108b7906122ef565b5050505050565b80600260008282546115f991906124c9565b90915550506001600160a01b0382166000818152600360205260408082208054850190555160008051602061259f8339815191529061163990859061210f565b60405180910390a35050565b600a5460075460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261167b9291169086906004016120eb565b602060405180830381600087803b15801561169557600080fd5b505af11580156116a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cd9190611f31565b5060075460405163534a7e1d60e11b81526001600160a01b039091169063a694fc3a906116fe90859060040161210f565b600060405180830381600087803b15801561171857600080fd5b505af115801561172c573d6000803e3d6000fd5b505050505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000805160206125bf833981519152826040516117a391906121e9565b60405180910390a1600754604051631c683a1b60e11b81526001600160a01b03909116906338d07436906117de908590600190600401612455565b600060405180830381600087803b1580156117f857600080fd5b505af115801561180c573d6000803e3d6000fd5b50506009546040516370a0823160e01b8152600093506001600160a01b0390911691506370a08231906118439030906004016120d7565b60206040518083038186803b15801561185b57600080fd5b505afa15801561186f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118939190611f69565b905080156118a15750611c78565b60095460085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926118d79291169085906004016120eb565b602060405180830381600087803b1580156118f157600080fd5b505af1158015611905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119299190611f31565b50600a546040516370a0823160e01b81526000805160206125bf833981519152916001600160a01b0316906370a08231906119689030906004016120d7565b60206040518083038186803b15801561198057600080fd5b505afa158015611994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b89190611f69565b6040516119c59190612275565b60405180910390a160408051600480825260a0820190925260009160208201608080368337505060095482519293506001600160a01b031691839150600090611a1e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600b54825191169082906001908110611a5d57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600c54825191169082906002908110611a9c57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600a54825191169082906003908110611adb57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092010152600854600091166338ed173984838530611b0c4260016124c9565b6040518663ffffffff1660e01b8152600401611b2c959493929190612465565b600060405180830381600087803b158015611b4657600080fd5b505af1158015611b5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b829190810190611e72565b600081518110611ba257634e487b7160e01b600052603260045260246000fd5b602002602001015190506000805160206125bf83398151915281604051611bc9919061231d565b60405180910390a1600a546040516370a0823160e01b81526000805160206125bf833981519152916001600160a01b0316906370a0823190611c0f9030906004016120d7565b60206040518083038186803b158015611c2757600080fd5b505afa158015611c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5f9190611f69565b604051611c6c919061221d565b60405180910390a15050505b5050565b6001600160a01b03821660009081526003602052604081208054839290611ca4908490612520565b90915550506002805482900390556040516000906001600160a01b0384169060008051602061259f8339815191529061163990859061210f565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611d345760405162461bcd60e51b81526004016108b790612352565b50505050565b80356001600160a01b03811681146107e857600080fd5b600060208284031215611d62578081fd5b610a2482611d3a565b60008060408385031215611d7d578081fd5b611d8683611d3a565b9150611d9460208401611d3a565b90509250929050565b600080600060608486031215611db1578081fd5b611dba84611d3a565b9250611dc860208501611d3a565b9150604084013590509250925092565b600080600080600080600060e0888a031215611df2578283fd5b611dfb88611d3a565b9650611e0960208901611d3a565b95506040880135945060608801359350608088013560ff81168114611e2c578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e5b578182fd5b611e6483611d3a565b946020939093013593505050565b60006020808385031215611e84578182fd5b825167ffffffffffffffff80821115611e9b578384fd5b818501915085601f830112611eae578384fd5b815181811115611ec057611ec0612588565b838102604051601f19603f83011681018181108582111715611ee457611ee4612588565b604052828152858101935084860182860187018a1015611f02578788fd5b8795505b83861015611f24578051855260019590950194938601938601611f06565b5098975050505050505050565b600060208284031215611f42578081fd5b81518015158114610a24578182fd5b600060208284031215611f62578081fd5b5035919050565b600060208284031215611f7a578081fd5b5051919050565b60008060408385031215611f93578182fd5b82359150611d9460208401611d3a565b600080600060608486031215611fb7578283fd5b83359250611fc760208501611d3a565b9150611fd560408501611d3a565b90509250925092565b6000815180845260208085019450808401835b838110156120165781516001600160a01b031687529582019590820190600101611ff1565b509495945050505050565b815460009081906002810460018083168061203d57607f831692505b602080841082141561205d57634e487b7160e01b87526022600452602487fd5b8180156120715760018114612082576120ae565b60ff198616895284890196506120ae565b61208b8a6124bd565b885b868110156120a65781548b82015290850190830161208d565b505084890196505b509498975050505050505050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b818110156121c2578581018301518582016040015282016121a6565b818111156121d35783604083870101525b50601f01601f1916929092016040019392505050565b60408082526012908201527102ab739ba30b5b4b7339020b9b9b2ba399d160751b6060820152602081019190915260800190565b604080825260119082015270021ab2c1030b33a32b9102a3930b2329d1607d1b6060820152602081019190915260800190565b6020808252600b908201526a5a45524f5f53484152455360a81b604082015260600190565b604080825260129082015271021ab2c103132b337b932902a3930b2329d160751b6060820152602081019190915260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601490820152731514905394d1915497d19493d357d1905253115160621b604082015260600190565b60408082526013908201527202a3930b232a932ba3ab93720a6b7bab73a1d1606d1b6060820152602081019190915260800190565b6020808252600f908201526e1514905394d1915497d19052531151608a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600e908201526d24a72b20a624a22fa9a4a3a722a960911b604082015260600190565b6020808252600b908201526a5a45524f5f41535345545360a81b604082015260600190565b60208082526017908201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604082015260600190565b60008382526040602083015261244d6040830184611fde565b949350505050565b9182521515602082015260400190565b600086825285602083015260a0604083015261248460a0830186611fde565b6001600160a01b0394909416606083015250608001529392505050565b918252602082015260400190565b60ff91909116815260200190565b60009081526020902090565b600082198211156124dc576124dc612572565b500190565b6000826124fc57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561251b5761251b612572565b500290565b60008282101561253257612532612572565b500390565b60028104600182168061254b57607f821691505b6020821081141561256c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a26469706673582212201efaf0bcadafea701509e38a8f4bac870397f176c02dde87e494b79b5ecb75d564736f6c63430008010033a2646970667358221220a807dbc2c87927e57470b393a7c197bc6f0101b90b14dab6bbe1e9125534e2df64736f6c63430008010033",
    "sourceMap": "547:2042:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:224;;;:::i;:::-;;1391:569;;;:::i;2274:313::-;;;;;;:::i;:::-;;:::i;628:20::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1222:163;;;:::i;1819:584:0:-;;;:::i;:::-;;;;;;;:::i;2021:180:11:-;;;:::i;592:29::-;;;:::i;1572:26:0:-;;;:::i;991:224:11:-;1046:6;:59;;-1:-1:-1;;;;;;1046:59:11;1062:42;1046:59;;;;;1115:38;;-1:-1:-1;;;1115:38:11;;-1:-1:-1;;;;;1115:6:11;;;;;:11;;:38;;1135:4;;1142:10;;1115:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1178:9;;:30;;;;;-1:-1:-1;;;;;1178:30:11;;;;;-1:-1:-1;;;;;1178:30:11;;;;;;991:224::o;1391:569::-;1476:3;;:28;;-1:-1:-1;;;1476:28:11;;1438:67;;-1:-1:-1;;;;;1476:3:11;;:13;;:28;;1498:4;;1476:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1438:67;;;;;;:::i;:::-;;;;;;;;1508:13;:11;:13::i;:::-;1566:3;;:28;;-1:-1:-1;;;1566:28:11;;1529:66;;-1:-1:-1;;;;;1566:3:11;;:13;;:28;;1588:4;;1566:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1529:66;;;;;;:::i;:::-;;;;;;;;1631:6;;-1:-1:-1;;;;;1631:6:11;:11;1643:25;:15;1661:7;1643:25;:::i;:::-;1631:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1676:28;1695:8;1676:18;:28::i;:::-;1707:6;;-1:-1:-1;;;;;1707:6:11;:11;1719:25;:15;1737:7;1719:25;:::i;:::-;1707:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1823:9:11;;:50;;-1:-1:-1;;;1823:50:11;;:9;;;;-1:-1:-1;;;;;1823:9:11;;-1:-1:-1;1823:16:11;;-1:-1:-1;1823:50:11;;1840:4;;1853;;;;1823:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1924:3:11;;:28;;-1:-1:-1;;;1924:28:11;;1885:68;;-1:-1:-1;;;;;1924:3:11;;:13;;:28;;1946:4;;1924:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1885:68;;;;;;:::i;:::-;;;;;;;;1391:569::o;2274:313::-;2331:6;;:61;;-1:-1:-1;;;2331:61:11;;-1:-1:-1;;;;;2331:6:11;;;;:17;;:61;;2349:42;;2331:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2402:3:11;;2423:17;;;2402:49;;-1:-1:-1;;;2402:49:11;;-1:-1:-1;;;;;2402:3:11;;;;-1:-1:-1;2402:12:11;;-1:-1:-1;2402:49:11;;2423:17;;;;2442:8;;2402:49;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2562:6;;;;;;;;;-1:-1:-1;;;;;2562:6:11;-1:-1:-1;;;;;2562:16:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2274:313;:::o;628:20::-;;;-1:-1:-1;;;;;628:20:11;;:::o;1222:163::-;1261:8;:6;:8::i;:::-;1279:3;;;1299:9;1279:50;;-1:-1:-1;;;1279:50:11;;-1:-1:-1;;;;;1279:3:11;;;;:11;;:50;;1299:9;;;;;;;;-1:-1:-1;;1311:17:11;1279:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1339:9:11;;:37;;-1:-1:-1;;;1339:37:11;;:9;;;;-1:-1:-1;;;;;1339:9:11;;:17;;:37;;1357:4;;1370;;1339:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1222:163::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;1896:14;;1869:528;1941:17;1984:16;:14;:16::i;:::-;1980:374;;;2196:43;;2023:20;;1671:64;;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;1980:374;;2374:12;-1:-1:-1;1869:528:0;1819:584;:::o;2021:180:11:-;2056:6;;:61;;-1:-1:-1;;;2056:61:11;;-1:-1:-1;;;;;2056:6:11;;;;:17;;:61;;2074:42;;2056:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2127:3:11;;:39;;-1:-1:-1;;;2127:39:11;;-1:-1:-1;;;;;2127:3:11;;;;-1:-1:-1;2127:12:11;;-1:-1:-1;2127:39:11;;2148:4;;2155:10;;2127:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2176:6;;;;;;;;;-1:-1:-1;;;;;2176:6:11;-1:-1:-1;;;;;2176:16:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:180::o;592:29::-;;;;;;-1:-1:-1;;;;;592:29:11;;:::o;1572:26:0:-;;;;;;:::o;2840:242::-;2990:42;2978:55;3059:16;;2840:242;:::o;-1:-1:-1:-;;;;;;;;:::o;14:297:12:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:12:o;316:190::-;;428:2;416:9;407:7;403:23;399:32;396:2;;;449:6;441;434:22;396:2;-1:-1:-1;477:23:12;;386:120;-1:-1:-1;386:120:12:o;511:194::-;;634:2;622:9;613:7;609:23;605:32;602:2;;;655:6;647;640:22;602:2;-1:-1:-1;683:16:12;;592:113;-1:-1:-1;592:113:12:o;710:342::-;;791:5;785:12;815:3;827:128;841:6;838:1;835:13;827:128;;;938:4;923:13;;;919:24;;913:31;900:11;;;893:52;856:12;827:128;;;973:6;970:1;967:13;964:2;;;1008:3;999:6;994:3;990:16;983:29;964:2;-1:-1:-1;1030:16:12;;;;;761:291;-1:-1:-1;;761:291:12:o;1057:280::-;-1:-1:-1;;;;;;1242:33:12;;1230:46;;1057:280;1292:39;1328:1;1319:11;;1311:6;1292:39;:::i;:::-;1285:46;1220:117;-1:-1:-1;;;;1220:117:12:o;1342:191::-;;1496:31;1523:3;1515:6;1496:31;:::i;1538:203::-;-1:-1:-1;;;;;1702:32:12;;;;1684:51;;1672:2;1657:18;;1639:102::o;1746:274::-;-1:-1:-1;;;;;1938:32:12;;;;1920:51;;2002:2;1987:18;;1980:34;1908:2;1893:18;;1875:145::o;2923:187::-;3088:14;;3081:22;3063:41;;3051:2;3036:18;;3018:92::o;3567:300::-;3767:25;;;-1:-1:-1;;;;;3828:32:12;3823:2;3808:18;;3801:60;3755:2;3740:18;;3722:145::o;3872:401::-;4100:25;;;-1:-1:-1;;;;;4199:15:12;;;4194:2;4179:18;;4172:43;4251:15;4246:2;4231:18;;4224:43;4088:2;4073:18;;4055:218::o;4278:419::-;4508:2;4490:21;;;4547:2;4527:18;;;4520:30;-1:-1:-1;;;4581:2:12;4566:18;;4559:51;4677:4;4662:20;;4655:36;;;;4642:3;4627:19;;4480:217::o;4702:417::-;4932:2;4914:21;;;4971:2;4951:18;;;4944:30;-1:-1:-1;;;5005:2:12;4990:18;;4983:49;5099:4;5084:20;;5077:36;;;;5064:3;5049:19;;4904:215::o;5124:418::-;5354:2;5336:21;;;5393:2;5373:18;;;5366:30;-1:-1:-1;;;5427:2:12;5412:18;;5405:50;5522:4;5507:20;;5500:36;;;;5487:3;5472:19;;5326:216::o;5547:177::-;5693:25;;;5681:2;5666:18;;5648:76::o;5729:229::-;;5800:1;5796:6;5793:1;5790:13;5787:2;;;-1:-1:-1;;;5826:33:12;;5882:4;5879:1;5872:15;5912:4;5833:3;5900:17;5787:2;-1:-1:-1;5943:9:12;;5777:181::o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/src/test/tokenizer.t.sol",
    "id": 4142,
    "exportedSymbols": {
      "Cheats": [
        3921
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        2822
      ],
      "ERC4626": [
        2434
      ],
      "ICRVDepositor": [
        3046
      ],
      "ICVXStakingContract": [
        3103
      ],
      "IUniRouter": [
        3496
      ],
      "Ownable": [
        1891
      ],
      "TokenizerSetup": [
        4141
      ],
      "cvxTokenizer": [
        3886
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:2591:11",
    "nodes": [
      {
        "id": 3888,
        "nodeType": "PragmaDirective",
        "src": "0:23:11",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ]
      },
      {
        "id": 3889,
        "nodeType": "ImportDirective",
        "src": "25:26:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "scope": 4142,
        "sourceUnit": 1787,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3890,
        "nodeType": "ImportDirective",
        "src": "52:29:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/src/cvxTokenizer.sol",
        "file": "../cvxTokenizer.sol",
        "scope": 4142,
        "sourceUnit": 3887,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3891,
        "nodeType": "ImportDirective",
        "src": "82:35:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/lib/solmate/src/tokens/ERC20.sol",
        "file": "@solmate/tokens/ERC20.sol",
        "scope": 4142,
        "sourceUnit": 2823,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3893,
        "nodeType": "ImportDirective",
        "src": "118:62:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/src/Interfaces/ICRVDepositor.sol",
        "file": "../Interfaces/ICRVDepositor.sol",
        "scope": 4142,
        "sourceUnit": 3047,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3892,
              "name": "ICRVDepositor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "126:13:11",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3895,
        "nodeType": "ImportDirective",
        "src": "181:74:11",
        "absolutePath": "/home/freshpizza/git-repos/StakedCVX-Tokenizer/src/Interfaces/ICVXStakingContract.sol",
        "file": "../Interfaces/ICVXStakingContract.sol",
        "scope": 4142,
        "sourceUnit": 3104,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3894,
              "name": "ICVXStakingContract",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "189:19:11",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3921,
        "nodeType": "ContractDefinition",
        "src": "257:236:11",
        "nodes": [
          {
            "id": 3902,
            "nodeType": "FunctionDefinition",
            "src": "280:52:11",
            "functionSelector": "c88a5e6d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deal",
            "parameters": {
              "id": 3900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3897,
                  "mutability": "mutable",
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 3902,
                  "src": "294:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3899,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3902,
                  "src": "307:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "307:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:29:11"
            },
            "returnParameters": {
              "id": 3901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:11"
            },
            "scope": 3921,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3907,
            "nodeType": "FunctionDefinition",
            "src": "337:45:11",
            "functionSelector": "06447d56",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "startPrank",
            "parameters": {
              "id": 3905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3904,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3907,
                  "src": "357:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:16:11"
            },
            "returnParameters": {
              "id": 3906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:11"
            },
            "scope": 3921,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3910,
            "nodeType": "FunctionDefinition",
            "src": "387:30:11",
            "functionSelector": "90c5013b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stopPrank",
            "parameters": {
              "id": 3908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:11"
            },
            "returnParameters": {
              "id": 3909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:0:11"
            },
            "scope": 3921,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3915,
            "nodeType": "FunctionDefinition",
            "src": "422:32:11",
            "functionSelector": "1f7b4f30",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "roll",
            "parameters": {
              "id": 3913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3912,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3915,
                  "src": "436:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "435:9:11"
            },
            "returnParameters": {
              "id": 3914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:11"
            },
            "scope": 3921,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3920,
            "nodeType": "FunctionDefinition",
            "src": "459:32:11",
            "functionSelector": "e5d6bf02",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "warp",
            "parameters": {
              "id": 3918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3917,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3920,
                  "src": "473:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:9:11"
            },
            "returnParameters": {
              "id": 3919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:11"
            },
            "scope": 3921,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          3921
        ],
        "name": "Cheats",
        "scope": 4142
      },
      {
        "id": 4141,
        "nodeType": "ContractDefinition",
        "src": "547:2042:11",
        "nodes": [
          {
            "id": 3927,
            "nodeType": "VariableDeclaration",
            "src": "592:29:11",
            "constant": false,
            "functionSelector": "f0d26e1c",
            "mutability": "mutable",
            "name": "tokenizer",
            "scope": 4141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
              "typeString": "contract cvxTokenizer"
            },
            "typeName": {
              "id": 3926,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3925,
                "name": "cvxTokenizer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3886,
                "src": "592:12:11"
              },
              "referencedDeclaration": 3886,
              "src": "592:12:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                "typeString": "contract cvxTokenizer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3930,
            "nodeType": "VariableDeclaration",
            "src": "628:20:11",
            "constant": false,
            "functionSelector": "700180c6",
            "mutability": "mutable",
            "name": "cheats",
            "scope": 4141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Cheats_$3921",
              "typeString": "contract Cheats"
            },
            "typeName": {
              "id": 3929,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3928,
                "name": "Cheats",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3921,
                "src": "628:6:11"
              },
              "referencedDeclaration": 3921,
              "src": "628:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cheats_$3921",
                "typeString": "contract Cheats"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3936,
            "nodeType": "VariableDeclaration",
            "src": "655:61:11",
            "constant": false,
            "mutability": "mutable",
            "name": "CVX",
            "scope": 4141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2822",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 3932,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3931,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2822,
                "src": "655:5:11"
              },
              "referencedDeclaration": 2822,
              "src": "655:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
                  "id": 3934,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "673:42:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3933,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2822,
                "src": "667:5:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2822_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 3935,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "667:49:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3942,
            "nodeType": "VariableDeclaration",
            "src": "722:61:11",
            "constant": false,
            "mutability": "mutable",
            "name": "CRV",
            "scope": 4141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$2822",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 3938,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3937,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2822,
                "src": "722:5:11"
              },
              "referencedDeclaration": 2822,
              "src": "722:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                  "id": 3940,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "740:42:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3939,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 2822,
                "src": "734:5:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$2822_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 3941,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "734:49:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2822",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3948,
            "nodeType": "VariableDeclaration",
            "src": "789:103:11",
            "constant": false,
            "mutability": "mutable",
            "name": "cvxStakerContract",
            "scope": 4141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
              "typeString": "contract ICVXStakingContract"
            },
            "typeName": {
              "id": 3944,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3943,
                "name": "ICVXStakingContract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3103,
                "src": "789:19:11"
              },
              "referencedDeclaration": 3103,
              "src": "789:19:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
                "typeString": "contract ICVXStakingContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843463530623831304535374163333342393164434635323543366464643938383142313339333332",
                  "id": 3946,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "849:42:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xCF50b810E57Ac33B91dCF525C6ddd9881B139332"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3945,
                "name": "ICVXStakingContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3103,
                "src": "829:19:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ICVXStakingContract_$3103_$",
                  "typeString": "type(contract ICVXStakingContract)"
                }
              },
              "id": 3947,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "829:63:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
                "typeString": "contract ICVXStakingContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3954,
            "nodeType": "VariableDeclaration",
            "src": "898:86:11",
            "constant": false,
            "mutability": "mutable",
            "name": "CRVDepositor",
            "scope": 4141,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICRVDepositor_$3046",
              "typeString": "contract ICRVDepositor"
            },
            "typeName": {
              "id": 3950,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3949,
                "name": "ICRVDepositor",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3046,
                "src": "898:13:11"
              },
              "referencedDeclaration": 3046,
              "src": "898:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICRVDepositor_$3046",
                "typeString": "contract ICRVDepositor"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307838303134353935463241423534634437633630344230304539666239333231373666446338364165",
                  "id": 3952,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "941:42:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x8014595F2AB54cD7c604B00E9fb932176fDc86Ae"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 3951,
                "name": "ICRVDepositor",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3046,
                "src": "927:13:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ICRVDepositor_$3046_$",
                  "typeString": "type(contract ICRVDepositor)"
                }
              },
              "id": 3953,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "927:57:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICRVDepositor_$3046",
                "typeString": "contract ICRVDepositor"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3981,
            "nodeType": "FunctionDefinition",
            "src": "991:224:11",
            "body": {
              "id": 3980,
              "nodeType": "Block",
              "src": "1015:200:11",
              "statements": [
                {
                  "expression": {
                    "id": 3961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3957,
                      "name": "cheats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3930,
                      "src": "1046:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cheats_$3921",
                        "typeString": "contract Cheats"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                          "id": 3959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1062:42:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3958,
                        "name": "Cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3921,
                        "src": "1055:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Cheats_$3921_$",
                          "typeString": "type(contract Cheats)"
                        }
                      },
                      "id": 3960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1055:50:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cheats_$3921",
                        "typeString": "contract Cheats"
                      }
                    },
                    "src": "1046:59:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cheats_$3921",
                      "typeString": "contract Cheats"
                    }
                  },
                  "id": 3962,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:59:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3968,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1135:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 3967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1127:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3966,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1127:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1127:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 3970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1142:10:11",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 3963,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3930,
                        "src": "1115:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3921",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 3965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3902,
                      "src": "1115:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3972,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:38:11"
                },
                {
                  "expression": {
                    "id": 3978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3973,
                      "name": "tokenizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3927,
                      "src": "1178:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                        "typeString": "contract cvxTokenizer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1190:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_cvxTokenizer_$3886_$",
                          "typeString": "function () returns (contract cvxTokenizer)"
                        },
                        "typeName": {
                          "id": 3975,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3974,
                            "name": "cvxTokenizer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3886,
                            "src": "1194:12:11"
                          },
                          "referencedDeclaration": 3886,
                          "src": "1194:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                            "typeString": "contract cvxTokenizer"
                          }
                        }
                      },
                      "id": 3977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1190:18:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                        "typeString": "contract cvxTokenizer"
                      }
                    },
                    "src": "1178:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                      "typeString": "contract cvxTokenizer"
                    }
                  },
                  "id": 3979,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:30:11"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "parameters": {
              "id": 3955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1005:2:11"
            },
            "returnParameters": {
              "id": 3956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:11"
            },
            "scope": 4141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4012,
            "nodeType": "FunctionDefinition",
            "src": "1222:163:11",
            "body": {
              "id": 4011,
              "nodeType": "Block",
              "src": "1251:134:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3984,
                      "name": "getCVX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4113,
                      "src": "1261:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1261:8:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3986,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:8:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3992,
                            "name": "tokenizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3927,
                            "src": "1299:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                              "typeString": "contract cvxTokenizer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                              "typeString": "contract cvxTokenizer"
                            }
                          ],
                          "id": 3991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1291:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3990,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1291:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1291:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1316:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 3995,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1316:7:11",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 3994,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1311:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1311:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 3998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1311:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3987,
                        "name": "CVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3936,
                        "src": "1279:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2539,
                      "src": "1279:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1279:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4000,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:50:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1357:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "id": 4007,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1370:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1362:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4005,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1362:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1362:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4001,
                        "name": "tokenizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3927,
                        "src": "1339:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                          "typeString": "contract cvxTokenizer"
                        }
                      },
                      "id": 4003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2030,
                      "src": "1339:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 4009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:37:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4010,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:37:11"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "parameters": {
              "id": 3982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:2:11"
            },
            "returnParameters": {
              "id": 3983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:11"
            },
            "scope": 4141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4088,
            "nodeType": "FunctionDefinition",
            "src": "1391:569:11",
            "body": {
              "id": 4087,
              "nodeType": "Block",
              "src": "1423:537:11",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "435658206265666f7265206465706f7369743a20",
                        "id": 4016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1453:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc7b093adb44ef3b8537d8faf221267979a8ed475729241cca6d8a2c3235799c",
                          "typeString": "literal_string \"CVX before deposit: \""
                        },
                        "value": "CVX before deposit: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4021,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1498:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                                  "typeString": "contract TokenizerSetup"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                                  "typeString": "contract TokenizerSetup"
                                }
                              ],
                              "id": 4020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1490:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4019,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1490:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1490:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4017,
                            "name": "CVX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3936,
                            "src": "1476:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2822",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2465,
                          "src": "1476:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1476:28:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dc7b093adb44ef3b8537d8faf221267979a8ed475729241cca6d8a2c3235799c",
                          "typeString": "literal_string \"CVX before deposit: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4015,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1438:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 4024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4025,
                  "nodeType": "EmitStatement",
                  "src": "1433:72:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4026,
                      "name": "testDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "1508:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:13:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4028,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:13:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "435658206166746572206465706f7369743a20",
                        "id": 4030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1544:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_799be89e480aed5a4bff7c3fa883ff91fd1e56037174c8893cad943dfb72ef4d",
                          "typeString": "literal_string \"CVX after deposit: \""
                        },
                        "value": "CVX after deposit: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4035,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1588:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                                  "typeString": "contract TokenizerSetup"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                                  "typeString": "contract TokenizerSetup"
                                }
                              ],
                              "id": 4034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1580:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4033,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1580:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1580:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4031,
                            "name": "CVX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3936,
                            "src": "1566:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2822",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2465,
                          "src": "1566:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1566:28:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_799be89e480aed5a4bff7c3fa883ff91fd1e56037174c8893cad943dfb72ef4d",
                          "typeString": "literal_string \"CVX after deposit: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4029,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1529:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 4038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:66:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4039,
                  "nodeType": "EmitStatement",
                  "src": "1524:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4043,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1643:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1643:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 4045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "1643:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4040,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3930,
                        "src": "1631:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3921",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3920,
                      "src": "1631:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1631:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4048,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:38:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030653138",
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1695:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        },
                        "value": "10000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000"
                        }
                      ],
                      "id": 4049,
                      "name": "ConvexEarnsProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4140,
                      "src": "1676:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4052,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4056,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1719:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1719:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 4058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "1719:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4053,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3930,
                        "src": "1707:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3921",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3920,
                      "src": "1707:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4061,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:38:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31653138",
                        "id": 4065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "id": 4068,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1853:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1845:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4066,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1845:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1845:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4072,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1867:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1859:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4070,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1859:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1859:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4062,
                        "name": "tokenizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3927,
                        "src": "1823:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_cvxTokenizer_$3886",
                          "typeString": "contract cvxTokenizer"
                        }
                      },
                      "id": 4064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2238,
                      "src": "1823:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4075,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:50:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4356582061667465722077697468647261776c3a20",
                        "id": 4077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1900:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49347058d642373dd3ec1438ece80c6d669609f22a36af41c0fca8395c0d6397",
                          "typeString": "literal_string \"CVX after withdrawl: \""
                        },
                        "value": "CVX after withdrawl: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 4082,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1946:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                                  "typeString": "contract TokenizerSetup"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                                  "typeString": "contract TokenizerSetup"
                                }
                              ],
                              "id": 4081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1938:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4080,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1938:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1938:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4078,
                            "name": "CVX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3936,
                            "src": "1924:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$2822",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 4079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2465,
                          "src": "1924:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1924:28:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_49347058d642373dd3ec1438ece80c6d669609f22a36af41c0fca8395c0d6397",
                          "typeString": "literal_string \"CVX after withdrawl: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4076,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1885:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 4085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1885:68:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4086,
                  "nodeType": "EmitStatement",
                  "src": "1880:73:11"
                }
              ]
            },
            "functionSelector": "389094f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawl",
            "parameters": {
              "id": 4013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1413:2:11"
            },
            "returnParameters": {
              "id": 4014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:0:11"
            },
            "scope": 4141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4113,
            "nodeType": "FunctionDefinition",
            "src": "2021:180:11",
            "body": {
              "id": 4112,
              "nodeType": "Block",
              "src": "2046:155:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307832384336633036323938643531344462303839393334303731333535453537343362663231643630",
                        "id": 4094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2074:42:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x28C6c06298d514Db089934071355E5743bf21d60"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4091,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3930,
                        "src": "2056:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3921",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3907,
                      "src": "2056:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4096,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4102,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2148:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenizerSetup_$4141",
                              "typeString": "contract TokenizerSetup"
                            }
                          ],
                          "id": 4101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2140:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4100,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2140:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2140:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030653138",
                        "id": 4104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2155:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        },
                        "value": "1000000e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 4097,
                        "name": "CVX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3936,
                        "src": "2127:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2572,
                      "src": "2127:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4106,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:39:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4107,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3930,
                        "src": "2176:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3921",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3910,
                      "src": "2176:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2176:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4111,
                  "nodeType": "ExpressionStatement",
                  "src": "2176:18:11"
                }
              ]
            },
            "functionSelector": "e567c022",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCVX",
            "parameters": {
              "id": 4089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2036:2:11"
            },
            "returnParameters": {
              "id": 4090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2046:0:11"
            },
            "scope": 4141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4140,
            "nodeType": "FunctionDefinition",
            "src": "2274:313:11",
            "body": {
              "id": 4139,
              "nodeType": "Block",
              "src": "2324:263:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                        "id": 4121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2349:42:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4118,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3930,
                        "src": "2331:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3921",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3907,
                      "src": "2331:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4123,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4129,
                            "name": "cvxStakerContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3948,
                            "src": "2423:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
                              "typeString": "contract ICVXStakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ICVXStakingContract_$3103",
                              "typeString": "contract ICVXStakingContract"
                            }
                          ],
                          "id": 4128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2415:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2415:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2415:26:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4131,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4115,
                        "src": "2442:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4124,
                        "name": "CRV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3942,
                        "src": "2402:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$2822",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2572,
                      "src": "2402:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2402:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4133,
                  "nodeType": "ExpressionStatement",
                  "src": "2402:49:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4134,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3930,
                        "src": "2562:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cheats_$3921",
                          "typeString": "contract Cheats"
                        }
                      },
                      "id": 4136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3910,
                      "src": "2562:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 4137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2562:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4138,
                  "nodeType": "ExpressionStatement",
                  "src": "2562:18:11"
                }
              ]
            },
            "functionSelector": "5fbf7983",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ConvexEarnsProfits",
            "parameters": {
              "id": 4116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4115,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 4140,
                  "src": "2302:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2301:15:11"
            },
            "returnParameters": {
              "id": 4117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2324:0:11"
            },
            "scope": 4141,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3923,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "574:6:11"
            },
            "id": 3924,
            "nodeType": "InheritanceSpecifier",
            "src": "574:6:11"
          }
        ],
        "contractDependencies": [
          1786,
          3886
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3922,
          "nodeType": "StructuredDocumentation",
          "src": "495:51:11",
          "text": " Helper contract for this project's tests"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4141,
          1786
        ],
        "name": "TokenizerSetup",
        "scope": 4142
      }
    ]
  }
}